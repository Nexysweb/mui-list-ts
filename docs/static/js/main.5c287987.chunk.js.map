{"version":3,"sources":["public.tsx","layout/footer.tsx","lib/components/alert.tsx","lib/list/order-utils.ts","lib/list/ui/form.tsx","lib/list/ui/global-search.tsx","lib/list/ui/index.tsx","lib/list/filter-utils.ts","lib/list/list-super.tsx","lib/list/pagination-utils.ts","lib/list/index.ts","lib/list/pagination.tsx","list/main.tsx","list/nperpage.tsx","list/pagination.tsx","list/no-pagination.tsx","list/filters.tsx","list/sorting.tsx","list/alert.tsx","list/small.tsx","list/async.tsx","list/index.ts","list/checkbox.tsx","layout/left.tsx","layout/index.tsx","routes.tsx","serviceWorker.ts","index.tsx"],"names":["Default","href","Code","Copyright","Typography","variant","color","align","Date","getFullYear","Footer","Box","pt","Alert","props","type","children","severity","get","NexysUtil","ds","getAttribute","attribute","a","ac","toLocaleLowerCase","order","data","sortAttribute","sortDescAsc","ordered","sort","b","bc","compare","reverse","paginationBoundaries","idx","nPerPage","start","end","SearchUnit","React","useState","value","setValue","name","onChange","e","target","v","GlobalSearch","filters","config","search","key","className","PopoverFilter","anchorEl","setAnchorEl","open","Boolean","IconButton","onClick","event","currentTarget","FilterList","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","main","d","searchType","searchString","toLowerCase","indexOf","compareString","Number","searchObj","length","func","applyFilter","filterArray","Object","keys","map","f","filter","Utils","object","JSON","stringify","includes","searchInObject","reduce","stateDefault","pageIdx","getPagination","n","nPerPageIn","nPage","Math","ceil","getNPage","List","HeaderUnit","FilterUnit","OrderController","ColCell","NoRow","Row","ListWrapper","ListContainer","ListHeader","ListBody","RecordInfo","Pagination","state","setState","def","asyncData","console","warn","setFilter","splice","push","addRemoveToArray","then","res","fData","fpData","slice","orderWithPagination","showPagination","pagination","h","i","label","descAsc","setOrder","row","j","render","renderBody","ListSuper","TableCell","style","fontWeight","Array","isArray","options","option","checked","id","Icon","ArrowUpward","ArrowDownward","cursor","TableRow","TableContainer","Table","TableHead","TableBody","PaginationUnit","PaginationWrapper","units","b1","b2","arr","unshift","getPageTiles","isDisabled","isActive","PaginationSuper","Main","columns","Tooltip","title","x","encodeURIComponent","common","capital","currencies","k","itemsPerPage","setItemsPerPage","Grid","md","item","width","Filters","Sorting","MyAlert","af","eu","as","am","check","location","country","amount","int","date","Small","Promise","resolve","AsyncExample","list","path","Component","NPerPage","NoPagination","selected","setSelected","renderNameLink","onCheckClick","Checkbox","renderCheckbox","_","Async","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","flexGrow","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","ListUnit","to","ListItem","button","ListItemText","primary","mainListItems","l","LeftNav","classes","Drawer","paper","clsx","ChevronLeft","Divider","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","marginRight","menuButtonHidden","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","Index","setOpen","CssBaseline","AppBar","Toolbar","edge","aria-label","Menu","component","noWrap","Container","maxWidth","xs","Paper","history","History","basename","process","Routes","exact","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5c287987.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Code as CodeIcon } from '@material-ui/icons';\n\nconst Default = (): JSX.Element => (\n  <div>\n    <p>Select an option from the menu above</p>\n\n    <p>\n      <a href=\"https://github.com/Nexysweb/mui-list-ts\">\n        <CodeIcon /> Source\n      </a>{' '}\n      available under MIT license.\n    </p>\n  </div>\n);\n\nexport default Default;\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nconst Copyright = (): JSX.Element => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      Copyright &copy; Nexys {new Date().getFullYear()}\n    </Typography>\n  );\n};\n\nconst Footer = (): JSX.Element => {\n  return (\n    <Box pt={4}>\n      <Copyright />\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { Alert as MUIAlert } from '@material-ui/lab';\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n  type?: 'error' | 'success' | 'info' | 'warning';\n}\n\nconst Alert = (props: Props): JSX.Element => {\n  const { type = 'success', children } = props;\n  return <MUIAlert severity={type}>{children}</MUIAlert>;\n};\n\nexport default Alert;\n","import NexysUtil from '@nexys/utils';\nconst { get } = NexysUtil.ds;\n\nexport const getAttribute = (attribute: any, a: any): any => {\n  const ac = get(attribute, a);\n\n  if (typeof ac === 'string') {\n    return ac.toLocaleLowerCase();\n  }\n\n  return ac;\n};\n\nexport const order = (\n  data: any[],\n  sortAttribute: string,\n  sortDescAsc: boolean\n): any[] => {\n  if (!sortAttribute) {\n    return data;\n  }\n\n  // use function in utils\n  const compare = (a: any, b: any, attribute: string): number => {\n    const ac = getAttribute(attribute, a);\n    const bc = getAttribute(attribute, b);\n\n    if (ac < bc) {\n      return -1;\n    }\n    if (ac > bc) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const ordered = data.sort((a, b) => compare(a, b, sortAttribute));\n\n  if (sortDescAsc === false) {\n    return ordered.reverse();\n  }\n\n  return ordered;\n};\n\nexport const paginationBoundaries = (\n  idx: number,\n  nPerPage: number\n): { start: number; end: number } => {\n  const start = (idx - 1) * nPerPage;\n  const end = idx * nPerPage;\n\n  return { start, end };\n};\n\nexport const orderWithPagination = (\n  data: any[],\n  idx: number,\n  nPerPage: number\n): any[] => {\n  const { start, end } = paginationBoundaries(idx, nPerPage);\n\n  return data.slice(start, end);\n};\n","import React from 'react';\n\nexport interface InputValue {\n  name: string;\n  value: string;\n}\n\ninterface Props {\n  name: string;\n  onChange: (inputValue: InputValue) => void;\n  value: string;\n}\n\nexport const SearchUnit = (props: Props): JSX.Element => {\n  const [value, setValue] = React.useState(props.value || '');\n  const { name, onChange } = props;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = e.target.value;\n    const v: InputValue = { name, value };\n    setValue(value);\n    onChange(v);\n  };\n\n  return (\n    <input value={value} type=\"text\" name={name} onChange={handleChange} />\n  );\n};\n","import React from 'react';\n\nimport { Config } from '../../types';\nimport { InputValue, SearchUnit } from './form';\n\ninterface Props {\n  config: Config;\n  filters: any;\n  onChange: (inputValue: InputValue) => void;\n}\n\nconst GlobalSearch = (props: Props): JSX.Element | null => {\n  const { onChange, filters, config } = props;\n\n  if (!config.search) {\n    return null;\n  }\n\n  const key = 'globalSearch';\n  const value = filters[key];\n\n  return (\n    <div className=\"pull-right\">\n      <SearchUnit onChange={onChange} name={key} value={value} />\n    </div>\n  );\n};\n\nexport default GlobalSearch;\n","import React from 'react';\n\nimport { Filter } from '../../types/filter';\nimport Alert from '../../components/alert';\nimport { paginationBoundaries } from '../order-utils';\nimport { SearchUnit, InputValue } from './form';\nimport GlobalSearch from './global-search';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  TableContainer,\n  Popover,\n  IconButton\n} from '@material-ui/core';\n\nimport {\n  KeyboardArrowUp as ChevronUp,\n  KeyboardArrowDown as ChevronDown,\n  ArrowUpward,\n  ArrowDownward,\n  FilterList as FilterListIcon\n} from '@material-ui/icons';\n\ninterface NoRowProps {\n  n: number;\n}\n\nexport const NoRow = (props: NoRowProps): JSX.Element | null => {\n  if (props.n > 0) {\n    return null;\n  }\n\n  return <Alert type=\"warning\">No rows found</Alert>;\n};\n\ninterface PaginationWrapperProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const PaginationWrapper = (\n  props: PaginationWrapperProps\n): JSX.Element => {\n  return (\n    <nav>\n      <ul className=\"pagination\">{props.children}</ul>\n    </nav>\n  );\n};\n\ninterface PaginationUnitProps {\n  children: React.ReactNode | JSX.Element;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const PaginationUnit = (\n  props: PaginationUnitProps\n): JSX.Element | null => {\n  const { isActive, isDisabled, children, onClick } = props;\n\n  // here we disable the button in case it is not valid\n  if (isDisabled) {\n    return null;\n  }\n\n  const className =\n    'page-item' + (isActive ? ' active' : '') + (isDisabled ? ' disabled' : '');\n\n  return (\n    <li className={className}>\n      <button className=\"page-link\" onClick={onClick}>\n        {children}\n      </button>\n    </li>\n  );\n};\n\ninterface ColCellProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ColCell = (props: ColCellProps): JSX.Element => {\n  const { children } = props;\n  return <TableCell>{children}</TableCell>;\n};\n\ninterface HeaderUnitProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const HeaderUnit = (props: HeaderUnitProps): JSX.Element => {\n  const { children } = props;\n\n  return <TableCell style={{ fontWeight: 'bold' }}>{children}</TableCell>;\n};\n\ninterface PopoverFilterProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const PopoverFilter = (props: PopoverFilterProps): JSX.Element => {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const { children } = props;\n\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <FilterListIcon />\n      </IconButton>\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {children}\n      </Popover>\n    </>\n  );\n};\n\ninterface CheckboxInputValue {\n  name: string;\n  value: {\n    func: Function;\n    value: number | string;\n  };\n}\n\ninterface FilterUnitProps {\n  filter?: boolean | Filter<any, any>;\n  filters: any;\n  name: string;\n  onChange: (inputValue: InputValue | CheckboxInputValue) => void;\n}\n\nexport const FilterUnit = (props: FilterUnitProps): JSX.Element | null => {\n  const { filter, filters, name, onChange } = props;\n\n  if (\n    (typeof filter === 'boolean' && filter === true) ||\n    (typeof filter === 'object' && filter.type === 'string')\n  ) {\n    return (\n      <PopoverFilter>\n        <SearchUnit name={name} value={filters[name]} onChange={onChange} />\n      </PopoverFilter>\n    );\n  }\n\n  if (\n    typeof filter === 'object' &&\n    filter.type === 'category' &&\n    Array.isArray(filter.options)\n  ) {\n    const v = filters[name] ? filters[name].value : [];\n\n    return (\n      <PopoverFilter>\n        {filter.options.map((option, i) => (\n          <span key={i}>\n            <input\n              checked={v.includes(option.id)}\n              type=\"checkbox\"\n              onChange={(): void =>\n                onChange({\n                  name,\n                  value: { value: option.id, func: filter.func }\n                })\n              }\n            />{' '}\n            {option.name}\n            <br />\n          </span>\n        ))}\n      </PopoverFilter>\n    );\n  }\n\n  return null;\n};\n\ninterface OrderControllerUpAndDownProps {\n  onClick: (isAscending: boolean) => void;\n}\n\nexport const OrderControllerUpAndDown = (\n  props: OrderControllerUpAndDownProps\n): JSX.Element => {\n  return (\n    <span>\n      <span key={'asc'} onClick={(): void => props.onClick(true)}>\n        <ChevronUp />\n      </span>\n      <span key={'desc'} onClick={(): void => props.onClick(false)}>\n        <ChevronDown />\n      </span>\n    </span>\n  );\n};\n\ninterface OrderControllerProps {\n  descAsc: boolean;\n  onClick: (a: null) => void;\n}\n\nexport const OrderController = (props: OrderControllerProps): JSX.Element => {\n  const { onClick, descAsc } = props;\n\n  const Icon = descAsc ? ArrowUpward : ArrowDownward;\n\n  return (\n    <small style={{ cursor: 'pointer' }} onClick={(): void => onClick(null)}>\n      <Icon />\n    </small>\n  );\n};\n\ninterface ListWrapperProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListWrapper = (props: ListWrapperProps): JSX.Element => {\n  const { children } = props;\n  return <div className=\"table-responsive-sm\">{children}</div>;\n};\n\ninterface ListContainerProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListContainer = (props: ListContainerProps): JSX.Element => {\n  const { children } = props;\n  return (\n    <TableContainer>\n      <Table>{children}</Table>\n    </TableContainer>\n  );\n};\n\ninterface RowProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const Row = (props: RowProps): JSX.Element => {\n  const { children } = props;\n  return <TableRow>{children}</TableRow>;\n};\n\ninterface ListHeaderProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListHeader = (props: ListHeaderProps): JSX.Element => {\n  const { children } = props;\n  return <TableHead>{children}</TableHead>;\n};\n\ninterface ListBodyProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListBody = (props: ListBodyProps): JSX.Element => {\n  const { children } = props;\n  return <TableBody>{children}</TableBody>;\n};\n\ninterface RecordInfoProps {\n  idx: number;\n  n: number;\n  nPerPage: number;\n}\n\nexport const RecordInfo = (props: RecordInfoProps): JSX.Element | null => {\n  const { nPerPage, idx, n } = props;\n\n  if (n === 0) {\n    return null;\n  }\n\n  const { start, end } = paginationBoundaries(idx, nPerPage);\n\n  return (\n    <p className=\"pull-right\">\n      Showing {start + 1} to {Number(start) + Number(nPerPage) > n ? n : end} of{' '}\n      {n} entries\n    </p>\n  );\n};\n\nexport { GlobalSearch };\n","import Utils from '@nexys/utils';\n\nexport const compareString = (main: string, searchString: string): boolean =>\n  main.toLowerCase().indexOf(searchString.toLowerCase()) > -1;\n\ninterface Search {\n  value: string;\n  func: (d: any, searchValue: string) => boolean;\n}\n\nexport const compare = (\n  main: string | number,\n  search: string | Search,\n  d?: any\n): boolean => {\n  const mainType = typeof main;\n  const searchType = typeof search;\n\n  if (searchType === 'string') {\n    // here casting the `main` so that it can match with the search even if not of the same type\n    switch (mainType) {\n      case 'string':\n        return compareString(main as string, search as string);\n      case 'number':\n        return main === Number(search);\n      default:\n        return false;\n    }\n  }\n\n  if (searchType === 'object') {\n    const searchObj = search as Search;\n\n    if (searchObj.value.length === 0) {\n      return true;\n    }\n\n    return searchObj.func(d, searchObj.value);\n  }\n\n  return false;\n};\n\n// this is a hack that will work for nested objects... leaving like this until better option\nexport const searchInObject = (searchString: string, object: any): boolean =>\n  JSON.stringify(object).toLowerCase().includes(searchString.toLowerCase());\n\n// same as above but only works with linear object, the rsult will be more precise though\nexport const searchInObjectLinear = (\n  searchString: string,\n  object: any\n): boolean =>\n  Object.keys(object)\n    .map(o => {\n      const main = object[o];\n\n      return compare(main, searchString);\n    })\n    .reduce((a, b) => a || b);\n\nexport const applyFilter = (data: any[], filters: any): any[] => {\n  const filterArray = Object.keys(filters).map(f => {\n    return { name: f, value: filters[f] };\n  });\n\n  if (filterArray.length === 0) {\n    return data;\n  }\n\n  return data.filter(d => {\n    return filterArray\n      .map(f => {\n        const searchString = f.value;\n        const key = f.name;\n        const main = Utils.ds.get(key, d);\n\n        if (key === 'globalSearch') {\n          return searchInObject(searchString, d);\n        }\n\n        if (main === null) {\n          return true;\n        }\n\n        return compare(main, searchString, d);\n      })\n      .reduce((a, b) => a && b);\n  });\n};\n\nexport const addRemoveToArray = <T = any>(v: T, a: T[] = []): T[] => {\n  if (!a) {\n    return [v];\n  }\n\n  if (a.includes(v)) {\n    const idx = a.indexOf(v);\n    a.splice(idx, 1);\n\n    return a;\n  }\n\n  a.push(v);\n\n  return a;\n};\n","import React, { useState } from 'react';\n\nimport Utils from '@nexys/utils';\n\nimport {\n  GlobalSearch,\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  Row,\n  ColCell,\n  RecordInfo,\n  NoRow,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody\n} from './ui';\nimport { InnerProps as PaginationProps } from './pagination';\nimport { Config, Definition } from '../types';\nimport { order, orderWithPagination } from './order-utils';\nimport { applyFilter, addRemoveToArray } from './filter-utils';\n\n//const LoaderDefault = (): JSX.Element => <p>Loading...</p>;\n\ninterface State {\n  sortAttribute: string | null;\n  sortDescAsc: boolean;\n  filters: any;\n  pageIdx: number;\n  data: Array<any>;\n}\n\nconst stateDefault: State = {\n  sortAttribute: null,\n  sortDescAsc: true,\n  filters: {},\n  pageIdx: 1,\n  data: []\n};\n\nexport interface Props {\n  HeaderUnit: typeof HeaderUnit;\n  FilterUnit: typeof FilterUnit;\n  OrderController: typeof OrderController;\n  ColCell: typeof ColCell;\n  GlobalSearch: typeof GlobalSearch;\n  NoRow: typeof NoRow;\n  Row: typeof Row;\n  ListWrapper: typeof ListWrapper;\n  ListContainer: typeof ListContainer;\n  ListHeader: typeof ListHeader;\n  ListBody: typeof ListBody;\n  RecordInfo: typeof RecordInfo;\n  Pagination: (props: PaginationProps) => JSX.Element | null;\n}\n\nexport interface InnerProps {\n  def: Definition<any>;\n  data?: any;\n  nPerPage?: number;\n  config?: Config;\n  asyncData?: () => Promise<any>;\n}\n\nconst ListSuper = ({\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  ColCell,\n  GlobalSearch,\n  NoRow,\n  Row,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody,\n  RecordInfo,\n  Pagination\n}: Props) =>\n  function InnerListSuper(props: InnerProps): JSX.Element {\n    const [state, setState] = useState(stateDefault);\n    // todo async\n    //const [ fpData, setPData ] = useState([]);\n    //const [ loading, setLoading ] = useState(true);\n    //const [ n, setN ] = useState(0);\n\n    const { def, config = {}, asyncData } = props; // todo asyn , asyncData = false\n    const { filters, pageIdx, sortAttribute, sortDescAsc, data } = state;\n    const nPerPage = config.nPerPage || props.nPerPage || 25;\n    if (props.nPerPage) {\n      console.warn(\n        'The use of nPerPage in props is deprecated. Add nPerPage to the config object prop.'\n      );\n    }\n\n    // this manages both strings and categories\n    const setFilter = (v: any): void => {\n      if (v.value === null || v.value === '') {\n        delete filters[v.name];\n      } else {\n        // if object\n        if (typeof v.value !== 'string') {\n          if (!filters[v.name]) {\n            filters[v.name] = { value: [], func: v.value.func };\n          }\n\n          filters[v.name].value = addRemoveToArray(\n            v.value.value,\n            filters[v.name].value\n          );\n        } else {\n          // if string\n          filters[v.name] = v.value === '' ? null : v.value;\n        }\n      }\n\n      // when a filter is applied, the page index is reset\n      const pageIdx = 1;\n\n      setState({ ...state, filters, pageIdx });\n    };\n\n    /**\n     * defines order to apply\n     * @param  {[type]} name    attribute/column\n     * @param  {[type]} descAsc true/false - asc or desc. if null, will toggle\n     * @return {[type]}         [description]\n     * todo: allow custom ordering\n     */\n    const setOrder = (name: string, descAsc: boolean | null = null): void => {\n      if (descAsc === null) {\n        descAsc = !sortDescAsc;\n      }\n\n      setState({\n        ...state,\n        pageIdx: 1,\n        sortDescAsc: descAsc,\n        sortAttribute: name\n      });\n    };\n\n    const changePage = (pageIdx: number): void => {\n      // todo block beyond max page\n      if (pageIdx > 0) {\n        setState({ ...state, pageIdx });\n      }\n    };\n\n    const renderHeaders = (): JSX.Element[] => {\n      return def.map((h, i) => {\n        const label = h.label === null ? null : h.label || h.name;\n\n        const order =\n          typeof h.sort === 'boolean' && h.sort === true ? (\n            <OrderController\n              descAsc={sortDescAsc}\n              onClick={(): void => setOrder(h.name)}\n            />\n          ) : null;\n\n        const filter = (\n          <FilterUnit\n            key={i}\n            filters={filters}\n            name={h.name}\n            filter={h.filter}\n            onChange={setFilter}\n          />\n        );\n\n        return (\n          <HeaderUnit key={i}>\n            {label} {order} {filter}\n          </HeaderUnit>\n        );\n      });\n    };\n\n    const renderBody = (data: any): JSX.Element =>\n      data.map((row: any, i: number) => (\n        <tr key={i}>\n          {def.map((h, j) => {\n            return (\n              <ColCell key={j}>\n                {h.render ? h.render(row) : Utils.ds.get(h.name, row)}\n              </ColCell>\n            );\n          })}\n        </tr>\n      ));\n\n    /*\n  // todo async\n  if (asyncData && loading) {\n    asyncData(state).then(p => {\n      setPData(p);\n      setN(p.length);\n      setLoading(false);\n    });\n\n    return <Loader/>;\n  }\n\n  if(loading) {\n    const fData = applyFilter(data, filters);\n    setLoading(false);\n    setN(fData.length);\n    setPData(orderWithPagination(order(fData, sortAttribute, sortDescAsc), pageIdx, nPerPage));\n  }*/\n    if (data.length === 0) {\n      if (asyncData)\n        asyncData().then(res => {\n          setState({ ...state, data: res });\n        });\n      else {\n        if (props.data.length) {\n          setState({ ...state, data: props.data });\n        }\n      }\n    }\n    const fData = applyFilter(data, filters);\n    const n = fData.length;\n    const fpData = orderWithPagination(\n      order(fData, sortAttribute ? sortAttribute : '', sortDescAsc),\n      pageIdx,\n      nPerPage\n    );\n\n    const showPagination = config.pagination ? config.pagination : true;\n\n    return (\n      <ListWrapper>\n        <GlobalSearch config={config} onChange={setFilter} filters={filters} />\n        <ListContainer>\n          <ListHeader>\n            <Row>{renderHeaders()}</Row>\n          </ListHeader>\n\n          <ListBody>{renderBody(fpData)}</ListBody>\n        </ListContainer>\n\n        <RecordInfo n={n} idx={pageIdx} nPerPage={nPerPage} />\n\n        {showPagination && n > nPerPage && (\n          <Pagination\n            n={n}\n            nPerPage={nPerPage}\n            idx={pageIdx}\n            onClick={changePage}\n          />\n        )}\n\n        <NoRow n={n} />\n      </ListWrapper>\n    );\n  };\n\nexport default ListSuper;\n","/**\n * get the number of pages\n * @param  {[type]} n        total number of rows\n * @param  {[type]} nPerPage number of rows per page\n * @return {[type]}          number of pages\n */\nexport const getNPage = (n: number, nPerPage: number): number => {\n  return Math.ceil(n / nPerPage);\n};\n\ninterface GetPaginationReturn {\n  idx: number;\n  nPerPage: number;\n  nPage: number;\n}\n\nexport const getPagination = (\n  n: number,\n  nPerPageIn: number\n): GetPaginationReturn => {\n  const nPerPage = nPerPageIn || 10;\n  const nPage = getNPage(n, nPerPage);\n  const idx = 1;\n\n  return {\n    idx,\n    nPerPage,\n    nPage\n  };\n};\n\n/**\n * get list of page based on the index (-i means that there's a gap - we do not use null so that it can than be used as an index)\n * @param  {[type]} idx   the page on which the user id\n * @param  {[type]} nPage the total amount of pages\n * @return {[type]}       [1, null, idx - 1, idx, idx + 1, null, nPage]\n */\nexport const getPageTiles = (idx: number, nPage: number): any[] => {\n  if (idx < 1) {\n    idx = 1;\n  }\n\n  if (idx > nPage) {\n    idx = nPage;\n  }\n\n  const b1 = idx - 1;\n  const b2 = idx + 1;\n\n  // init array\n  const arr = [idx];\n\n  if (idx > 1) {\n    arr.unshift(b1);\n  }\n\n  if (idx === nPage && nPage > 3) {\n    arr.unshift(b1 - 1);\n  }\n\n  if (idx < nPage) {\n    arr.push(b2);\n  }\n\n  if (idx === 1 && nPage > 3) {\n    arr.push(3);\n  }\n\n  if (b1 > 2 && nPage > 4) {\n    arr.unshift(-1);\n  }\n\n  if (b1 > 1) {\n    arr.unshift(1);\n  }\n\n  if (b2 < nPage - 1 && nPage > 4) {\n    arr.push(-2);\n  }\n\n  if (b2 < nPage) {\n    arr.push(nPage);\n  }\n\n  return arr;\n};\n","import {\n  GlobalSearch,\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  Row,\n  ColCell,\n  RecordInfo,\n  NoRow,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody,\n  PaginationUnit,\n  PaginationWrapper\n} from './ui';\nimport ListSuper from './list-super';\n//import {InnerProps, Props} from './list-super';\nimport PaginationSuper from './pagination';\nimport * as OrderUtils from './order-utils';\n\nconst Pagination = PaginationSuper({ PaginationUnit, PaginationWrapper });\n\nconst List = ListSuper({\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  ColCell,\n  GlobalSearch,\n  NoRow,\n  Row,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody,\n  RecordInfo,\n  Pagination\n});\n\nexport { PaginationSuper, ListSuper, OrderUtils, List };\n","import React from 'react';\n\nimport { PaginationUnit, PaginationWrapper } from './ui';\nimport { getPagination, getPageTiles } from './pagination-utils';\n\ninterface Props {\n  PaginationUnit: typeof PaginationUnit;\n  PaginationWrapper: typeof PaginationWrapper;\n}\n\nexport interface InnerProps {\n  idx: number;\n  n: number;\n  nPerPage: number;\n  onClick: (num: number) => void;\n}\n\nconst Pagination = ({ PaginationUnit, PaginationWrapper }: Props) =>\n  function (props: InnerProps): JSX.Element | null {\n    const { n, nPerPage, idx, onClick } = props;\n\n    if (n === 0) {\n      return null;\n    }\n\n    const { nPage } = getPagination(n, nPerPage);\n\n    const units = getPageTiles(idx, nPage).map((i: number) => {\n      if (i < 0) {\n        return (\n          <PaginationUnit key={i} isDisabled={true}>\n            ...\n          </PaginationUnit>\n        );\n      }\n\n      return (\n        <PaginationUnit\n          key={i}\n          isActive={i === idx}\n          onClick={(): void => onClick(i)}\n        >\n          {i}\n        </PaginationUnit>\n      );\n    });\n\n    return (\n      <PaginationWrapper>\n        <PaginationUnit\n          isDisabled={idx === 1}\n          onClick={(): void => onClick(idx - 1)}\n        >\n          &laquo;\n        </PaginationUnit>\n        {units}\n        <PaginationUnit\n          isDisabled={idx === nPage}\n          onClick={(): void => onClick(idx + 1)}\n        >\n          &raquo;\n        </PaginationUnit>\n      </PaginationWrapper>\n    );\n  };\n\nexport default Pagination;\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Definition } from '../lib/types/definition';\nimport { List } from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: (\n        <Tooltip title=\"Something about name\">\n          <span>Name</span>\n        </Tooltip>\n      ),\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Config, Definition } from '../lib/types';\nimport { List } from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config: Config = {\n    nPerPage: 7\n  };\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport { Definition } from '../lib/types/definition';\nimport { List } from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Pagination = (): JSX.Element => {\n  const [itemsPerPage, setItemsPerPage] = React.useState(10);\n\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const handlePageNumber = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = Math.ceil(Number(e.target.value));\n    setItemsPerPage(value > 0 ? value : 1);\n  };\n\n  return (\n    <>\n      <h2>Pagination example</h2>\n      <Grid md={2} item={true}>\n        # of records per page\n        <input\n          width=\"20%\"\n          type=\"number\"\n          value={itemsPerPage}\n          onChange={handlePageNumber}\n        />\n      </Grid>\n\n      <List data={data} def={columns} nPerPage={itemsPerPage} />\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport { Config, Definition } from '../lib/types';\nimport { List } from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config: Config = {\n    pagination: false\n  };\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport { List } from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Filters = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  return (\n    <>\n      <h2>Filter example</h2>\n      <List data={data} def={columns} config={{ search: true }} />\n    </>\n  );\n};\n\nexport default Filters;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport { List } from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Sorting = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      key: 'capital',\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || '',\n      sort: true\n    },\n    {\n      name: 'currency',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config = {};\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Sorting;\n","import React from 'react';\n\nimport Alert from '../lib/components/alert';\n\nconst MyAlert = (): JSX.Element => {\n  return <Alert type={'info'}>Some content</Alert>;\n};\n\nexport default MyAlert;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport { List } from '../lib/list';\n\ninterface Continent {\n  id: number;\n  name: string;\n}\n\ninterface Country {\n  name: string;\n}\n\ninterface Animal {\n  id: number;\n  check?: boolean;\n  name: string;\n  location: Continent;\n  country: Country;\n  amount: number;\n  int: number;\n  date: string;\n}\n\nconst af: Continent = { id: 1, name: 'Africa' };\nconst eu: Continent = { id: 2, name: 'Europe' };\nconst as: Continent = { id: 3, name: 'Asia' };\nconst am: Continent = { id: 4, name: 'America' };\n\nconst data: Animal[] = [\n  {\n    id: 2,\n    check: true,\n    name: 'Sheep',\n    location: eu,\n    country: { name: 'United Kingdom' },\n    amount: 23.3,\n    int: 23,\n    date: '2019-09-05'\n  },\n  {\n    id: 3,\n    name: 'Tiger',\n    location: as,\n    country: { name: 'India' },\n    amount: 24.1,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 4,\n    name: 'Elephant',\n    location: af,\n    country: { name: 'Tanzania' },\n    amount: 23,\n    int: 3,\n    date: '2019-09-05'\n  },\n  {\n    id: 5,\n    name: 'Lion',\n    location: af,\n    country: { name: 'South Africa' },\n    amount: 0.3,\n    int: 2,\n    date: '2019-09-05'\n  },\n  {\n    id: 6,\n    name: 'Cat',\n    location: eu,\n    country: { name: 'Germany' },\n    amount: 2.31,\n    int: 7,\n    date: '2019-09-05'\n  },\n  {\n    id: 7,\n    name: 'Grizzly',\n    location: am,\n    country: { name: 'Canada' },\n    amount: 3.35,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 8,\n    name: 'Antelope',\n    location: af,\n    country: { name: 'Namibia' },\n    amount: 2.3,\n    int: 87,\n    date: '2019-09-05'\n  }\n];\n\nconst def: Definition<Animal, Continent> = [\n  { name: 'name', filter: true, sort: true },\n  {\n    name: 'location.name',\n    filter: {\n      type: 'category',\n      func: (a, b): boolean => b.includes(a.location.id),\n      options: [af, eu, as, am]\n    }\n  },\n  { name: 'country.name', label: 'Country', filter: true },\n  { name: 'amount', label: 'A long label', filter: true },\n  { name: 'int', label: 'd', filter: true },\n  { name: 'date', label: 'a date', filter: true },\n  {\n    name: 'random',\n    label: 'custom',\n    render: (x): string => 'custom' + x.location.name\n  }\n];\n\nconst Small = (): JSX.Element => (\n  <List data={data} def={def} config={{ search: true }} nPerPage={3} />\n);\n\nexport default Small;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport { List } from '../lib/list';\n\ninterface Continent {\n  id: number;\n  name: string;\n}\n\ninterface Country {\n  name: string;\n}\n\ninterface Animal {\n  id: number;\n  check?: boolean;\n  name: string;\n  location: Continent;\n  country: Country;\n  amount: number;\n  int: number;\n  date: string;\n}\n\ntype Animals = Animal[];\n\nconst af: Continent = { id: 1, name: 'Africa' };\nconst eu: Continent = { id: 2, name: 'Europe' };\nconst as: Continent = { id: 3, name: 'Asia' };\nconst am: Continent = { id: 4, name: 'America' };\n\nconst data: Animals = [\n  {\n    id: 2,\n    check: true,\n    name: 'Sheep',\n    location: eu,\n    country: { name: 'United Kingdom' },\n    amount: 23.3,\n    int: 23,\n    date: '2019-09-05'\n  },\n  {\n    id: 3,\n    name: 'Tiger',\n    location: as,\n    country: { name: 'India' },\n    amount: 24.1,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 4,\n    name: 'Elephant',\n    location: af,\n    country: { name: 'Tanzania' },\n    amount: 23,\n    int: 3,\n    date: '2019-09-05'\n  },\n  {\n    id: 5,\n    name: 'Lion',\n    location: af,\n    country: { name: 'South Africa' },\n    amount: 0.3,\n    int: 2,\n    date: '2019-09-05'\n  },\n  {\n    id: 6,\n    name: 'Cat',\n    location: eu,\n    country: { name: 'Germany' },\n    amount: 2.31,\n    int: 7,\n    date: '2019-09-05'\n  },\n  {\n    id: 7,\n    name: 'Grizzly',\n    location: am,\n    country: { name: 'Canada' },\n    amount: 3.35,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 8,\n    name: 'Antelope',\n    location: af,\n    country: { name: 'Namibia' },\n    amount: 2.3,\n    int: 87,\n    date: '2019-09-05'\n  }\n];\n\nconst def: Definition<Animal, Continent> = [\n  { name: 'name', filter: true, sort: true },\n  {\n    name: 'location.name',\n    filter: {\n      type: 'category',\n      func: (a, b): boolean => b.includes(a.location.id),\n      options: [af, eu, as, am]\n    }\n  },\n  { name: 'country.name', label: 'Country', filter: true },\n  { name: 'amount', label: 'A long label', filter: true },\n  { name: 'int', label: 'd', filter: true },\n  { name: 'date', label: 'a date', filter: true },\n  {\n    name: 'random',\n    label: 'custom',\n    render: (x): string => 'custom' + x.location.name\n  }\n];\n\nconst asyncData = (): Promise<Definition<Animal, Continent>> =>\n  new Promise<Definition<Animal, Continent>>(resolve => resolve(data));\n\nconst AsyncExample = (): JSX.Element => (\n  <List\n    def={def}\n    config={{ search: true }}\n    asyncData={asyncData}\n    nPerPage={3}\n  />\n);\n\nexport default AsyncExample;\n","import Main from './main';\nimport NPerPage from './nperpage';\nimport Pagination from './pagination';\nimport NoPagination from './no-pagination';\nimport Filters from './filters';\nimport Sorting from './sorting';\nimport Alert from './alert';\nimport Small from './small';\nimport Async from './async';\nimport Checkbox from './checkbox';\n\nexport const list = [\n  { label: 'Main', path: '/table', Component: Main },\n  { label: 'N Per Page in Config', path: '/nperpage', Component: NPerPage },\n  { label: 'Pagination', path: '/pagination', Component: Pagination },\n  { label: 'No Pagination', path: '/no-pagination', Component: NoPagination },\n  { label: 'Filtering', path: '/filters', Component: Filters },\n  { label: 'Sorting', path: '/sorting', Component: Sorting },\n  { label: 'Checks', path: '/checks', Component: Checkbox },\n  { label: 'Small', path: '/small', Component: Small },\n  { label: 'Async', path: '/async', Component: Async },\n  { label: 'Alert', path: '/alert', Component: Alert }\n];\n","import React from 'react';\nimport { Checkbox } from '@material-ui/core';\n\nimport { Definition } from '../lib/types/definition';\nimport { List } from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst CheckboxExample = (): JSX.Element => {\n  const [selected, setSelected] = React.useState<string[]>([]);\n\n  const onCheckClick = (id: string): void => {\n    const idx = selected.indexOf(id);\n\n    if (idx < 0) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter((_, i) => i !== idx));\n    }\n  };\n\n  const renderCheckbox = (\n    x: Country,\n    onCheckClick: (id: string) => void\n  ): JSX.Element => (\n    <Checkbox onClick={(): void => onCheckClick(x.name.common)} />\n  );\n\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns = (onCheckClick: (id: string) => void): Definition<Country> => [\n    {\n      name: 'id',\n      render: (x): JSX.Element => renderCheckbox(x, onCheckClick)\n    },\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config = {};\n\n  return (\n    <>\n      {JSON.stringify(selected)}\n      <h2>Simple table example</h2>\n      <List data={data} def={columns(onCheckClick)} config={config} />\n    </>\n  );\n};\n\nexport default CheckboxExample;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { list } from '../list';\n\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Drawer,\n  IconButton\n} from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ChevronLeft as ChevronLeftIcon } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  }\n}));\n\ninterface ListUnitProps {\n  label: string;\n  path: string;\n}\n\nconst ListUnit = (props: ListUnitProps): JSX.Element => {\n  const { label, path } = props;\n  return (\n    <Link to={path}>\n      <ListItem button>\n        <ListItemText primary={label} />\n      </ListItem>\n    </Link>\n  );\n};\n\nconst mainListItems = list.map((l, i) => (\n  <ListUnit key={i} path={l.path} label={l.label} />\n));\n\ninterface LeftNavProps {\n  onClose: () => void;\n  open: boolean;\n}\n\nconst LeftNav = (props: LeftNavProps): JSX.Element => {\n  const { onClose, open } = props;\n  const classes = useStyles();\n\n  const handleDrawerClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      }}\n      open={open}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListUnit label={'Home'} path={'/'} />\n        {mainListItems}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default LeftNav;\n","import React from 'react';\n\nimport {\n  CssBaseline,\n  AppBar,\n  Container,\n  Toolbar,\n  IconButton,\n  Typography,\n  Grid,\n  Paper\n} from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//import Link as LinkMUI from '@material-ui/core/Link';\nimport { Menu as MenuIcon } from '@material-ui/icons';\n\nimport Footer from './footer';\nimport LeftNav from './left';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n}\n\nconst Index = ({ children }: Props): JSX.Element => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = (): void => {\n    setOpen(true);\n  };\n\n  const handleClose = (): void => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            MUI-List\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <LeftNav open={open} onClose={handleClose} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>{children}</Paper>\n            </Grid>\n          </Grid>\n          <Footer />\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\n\nimport { Router, Switch, Route } from 'react-router-dom';\nimport * as History from 'history';\n\nimport Public from './public';\nimport Layout from './layout';\nimport { list } from './list';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst Routes = (): JSX.Element => (\n  <Router history={history}>\n    <Layout>\n      <Switch>\n        {list.map((l, i) => (\n          <Route\n            key={i}\n            exact\n            path={l.path}\n            component={(): JSX.Element => <l.Component />}\n          />\n        ))}\n        <Route component={(): JSX.Element => <Public />} />\n      </Switch>\n    </Layout>\n  </Router>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}