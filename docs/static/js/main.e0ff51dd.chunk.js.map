{"version":3,"sources":["public.tsx","layout/footer.tsx","lib/components/alert.tsx","lib/list/order-utils.ts","lib/list/ui/form.tsx","lib/list/ui/global-search.tsx","lib/list/ui/index.tsx","lib/list/filter-utils.ts","lib/list/list-super.tsx","lib/list/pagination-utils.ts","lib/list/pagination-material.tsx","lib/list/index.ts","list/main.tsx","list/nperpage.tsx","list/pagination.tsx","list/no-pagination.tsx","list/filters.tsx","list/sorting.tsx","list/alert.tsx","list/small.tsx","list/async.tsx","list/index.ts","list/checkbox.tsx","layout/left.tsx","layout/index.tsx","routes.tsx","serviceWorker.ts","index.tsx"],"names":["Default","href","Code","Copyright","Typography","variant","color","align","Date","getFullYear","Footer","Box","pt","Alert","props","type","children","severity","get","NexysUtil","ds","getAttribute","attribute","a","ac","toLocaleLowerCase","order","data","sortAttribute","sortDescAsc","ordered","sort","b","bc","compare","reverse","paginationBoundaries","idx","nPerPage","start","end","SearchUnit","React","useState","value","setValue","name","onChange","e","target","v","GlobalSearch","filters","config","search","key","className","PopoverFilter","anchorEl","setAnchorEl","open","Boolean","IconButton","onClick","event","currentTarget","FilterList","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","main","d","searchType","searchString","toLowerCase","indexOf","compareString","Number","searchObj","length","func","applyFilter","filterArray","Object","keys","map","f","filter","Utils","object","JSON","stringify","includes","searchInObject","reduce","stateDefault","pageIdx","ListSuper","HeaderUnit","FilterUnit","OrderController","ColCell","NoRow","Row","ListWrapper","ListContainer","ListHeader","ListBody","RecordInfo","Pagination","state","setState","def","asyncData","console","warn","setFilter","splice","push","addRemoveToArray","then","res","fData","n","fpData","slice","orderWithPagination","showPagination","pagination","h","i","label","descAsc","setOrder","row","j","render","renderBody","getPagination","nPerPageIn","nPage","Math","ceil","getNPage","useStyles","makeStyles","theme","createStyles","root","marginTop","spacing","List","TableCell","style","fontWeight","Array","isArray","options","option","checked","id","Icon","ArrowUpward","ArrowDownward","cursor","TableRow","TableContainer","Table","TableHead","TableBody","classes","page","count","Main","columns","Tooltip","title","x","encodeURIComponent","common","capital","currencies","k","itemsPerPage","setItemsPerPage","Grid","md","item","width","Filters","Sorting","MyAlert","af","eu","as","am","check","location","country","amount","int","date","Small","Promise","resolve","AsyncExample","list","path","Component","NPerPage","NoPagination","selected","setSelected","renderNameLink","onCheckClick","Checkbox","renderCheckbox","_","Async","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","flexGrow","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","ListUnit","to","ListItem","button","ListItemText","primary","mainListItems","l","LeftNav","Drawer","paper","clsx","ChevronLeft","Divider","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","marginRight","menuButtonHidden","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","Index","setOpen","CssBaseline","AppBar","Toolbar","edge","aria-label","Menu","component","noWrap","Container","maxWidth","xs","Paper","history","History","basename","process","Routes","exact","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e0ff51dd.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Code as CodeIcon } from '@material-ui/icons';\n\nconst Default = (): JSX.Element => (\n  <div>\n    <p>Select an option from the menu above</p>\n\n    <p>\n      <a href=\"https://github.com/Nexysweb/mui-list-ts\">\n        <CodeIcon /> Source\n      </a>{' '}\n      available under MIT license.\n    </p>\n  </div>\n);\n\nexport default Default;\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nconst Copyright = (): JSX.Element => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      Copyright &copy; Nexys {new Date().getFullYear()}\n    </Typography>\n  );\n};\n\nconst Footer = (): JSX.Element => {\n  return (\n    <Box pt={4}>\n      <Copyright />\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { Alert as MUIAlert } from '@material-ui/lab';\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n  type?: 'error' | 'success' | 'info' | 'warning';\n}\n\nconst Alert = (props: Props): JSX.Element => {\n  const { type = 'success', children } = props;\n  return <MUIAlert severity={type}>{children}</MUIAlert>;\n};\n\nexport default Alert;\n","import NexysUtil from '@nexys/utils';\nconst { get } = NexysUtil.ds;\n\nexport const getAttribute = (attribute: any, a: any): any => {\n  const ac = get(attribute, a);\n\n  if (typeof ac === 'string') {\n    return ac.toLocaleLowerCase();\n  }\n\n  return ac;\n};\n\nexport const order = (\n  data: any[],\n  sortAttribute: string,\n  sortDescAsc: boolean\n): any[] => {\n  if (!sortAttribute) {\n    return data;\n  }\n\n  // use function in utils\n  const compare = (a: any, b: any, attribute: string): number => {\n    const ac = getAttribute(attribute, a);\n    const bc = getAttribute(attribute, b);\n\n    if (ac < bc) {\n      return -1;\n    }\n    if (ac > bc) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const ordered = data.sort((a, b) => compare(a, b, sortAttribute));\n\n  if (sortDescAsc === false) {\n    return ordered.reverse();\n  }\n\n  return ordered;\n};\n\nexport const paginationBoundaries = (\n  idx: number,\n  nPerPage: number\n): { start: number; end: number } => {\n  const start = (idx - 1) * nPerPage;\n  const end = idx * nPerPage;\n\n  return { start, end };\n};\n\nexport const orderWithPagination = (\n  data: any[],\n  idx: number,\n  nPerPage: number\n): any[] => {\n  const { start, end } = paginationBoundaries(idx, nPerPage);\n\n  return data.slice(start, end);\n};\n","import React from 'react';\n\nexport interface InputValue {\n  name: string;\n  value: string;\n}\n\ninterface Props {\n  name: string;\n  onChange: (inputValue: InputValue) => void;\n  value: string;\n}\n\nexport const SearchUnit = (props: Props): JSX.Element => {\n  const [value, setValue] = React.useState(props.value || '');\n  const { name, onChange } = props;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = e.target.value;\n    const v: InputValue = { name, value };\n    setValue(value);\n    onChange(v);\n  };\n\n  return (\n    <input value={value} type=\"text\" name={name} onChange={handleChange} />\n  );\n};\n","import React from 'react';\n\nimport { Config } from '../../types';\nimport { InputValue, SearchUnit } from './form';\n\ninterface Props {\n  config: Config;\n  filters: any;\n  onChange: (inputValue: InputValue) => void;\n}\n\nconst GlobalSearch = (props: Props): JSX.Element | null => {\n  const { onChange, filters, config } = props;\n\n  if (!config.search) {\n    return null;\n  }\n\n  const key = 'globalSearch';\n  const value = filters[key];\n\n  return (\n    <div className=\"pull-right\">\n      <SearchUnit onChange={onChange} name={key} value={value} />\n    </div>\n  );\n};\n\nexport default GlobalSearch;\n","import React from 'react';\n\nimport { Filter } from '../../types/filter';\nimport Alert from '../../components/alert';\nimport { paginationBoundaries } from '../order-utils';\nimport { SearchUnit, InputValue } from './form';\nimport GlobalSearch from './global-search';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  TableContainer,\n  Popover,\n  IconButton\n} from '@material-ui/core';\n\nimport {\n  KeyboardArrowUp as ChevronUp,\n  KeyboardArrowDown as ChevronDown,\n  ArrowUpward,\n  ArrowDownward,\n  FilterList as FilterListIcon\n} from '@material-ui/icons';\n\ninterface NoRowProps {\n  n: number;\n}\n\nexport const NoRow = (props: NoRowProps): JSX.Element | null => {\n  if (props.n > 0) {\n    return null;\n  }\n\n  return <Alert type=\"warning\">No rows found</Alert>;\n};\n\ninterface PaginationWrapperProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const PaginationWrapper = (\n  props: PaginationWrapperProps\n): JSX.Element => {\n  return (\n    <nav>\n      <ul className=\"pagination\">{props.children}</ul>\n    </nav>\n  );\n};\n\ninterface PaginationUnitProps {\n  children: React.ReactNode | JSX.Element;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const PaginationUnit = (\n  props: PaginationUnitProps\n): JSX.Element | null => {\n  const { isActive, isDisabled, children, onClick } = props;\n\n  // here we disable the button in case it is not valid\n  if (isDisabled) {\n    return null;\n  }\n\n  const className =\n    'page-item' + (isActive ? ' active' : '') + (isDisabled ? ' disabled' : '');\n\n  return (\n    <li className={className}>\n      <button className=\"page-link\" onClick={onClick}>\n        {children}\n      </button>\n    </li>\n  );\n};\n\ninterface ColCellProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ColCell = (props: ColCellProps): JSX.Element => {\n  const { children } = props;\n  return <TableCell>{children}</TableCell>;\n};\n\ninterface HeaderUnitProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const HeaderUnit = (props: HeaderUnitProps): JSX.Element => {\n  const { children } = props;\n\n  return <TableCell style={{ fontWeight: 'bold' }}>{children}</TableCell>;\n};\n\ninterface PopoverFilterProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const PopoverFilter = (props: PopoverFilterProps): JSX.Element => {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const { children } = props;\n\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <FilterListIcon />\n      </IconButton>\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {children}\n      </Popover>\n    </>\n  );\n};\n\ninterface CheckboxInputValue {\n  name: string;\n  value: {\n    func: Function;\n    value: number | string;\n  };\n}\n\ninterface FilterUnitProps {\n  filter?: boolean | Filter<any, any>;\n  filters: any;\n  name: string;\n  onChange: (inputValue: InputValue | CheckboxInputValue) => void;\n}\n\nexport const FilterUnit = (props: FilterUnitProps): JSX.Element | null => {\n  const { filter, filters, name, onChange } = props;\n\n  if (\n    (typeof filter === 'boolean' && filter === true) ||\n    (typeof filter === 'object' && filter.type === 'string')\n  ) {\n    return (\n      <PopoverFilter>\n        <SearchUnit name={name} value={filters[name]} onChange={onChange} />\n      </PopoverFilter>\n    );\n  }\n\n  if (\n    typeof filter === 'object' &&\n    filter.type === 'category' &&\n    Array.isArray(filter.options)\n  ) {\n    const v = filters[name] ? filters[name].value : [];\n\n    return (\n      <PopoverFilter>\n        {filter.options.map((option, i) => (\n          <span key={i}>\n            <input\n              checked={v.includes(option.id)}\n              type=\"checkbox\"\n              onChange={(): void =>\n                onChange({\n                  name,\n                  value: { value: option.id, func: filter.func }\n                })\n              }\n            />{' '}\n            {option.name}\n            <br />\n          </span>\n        ))}\n      </PopoverFilter>\n    );\n  }\n\n  return null;\n};\n\ninterface OrderControllerUpAndDownProps {\n  onClick: (isAscending: boolean) => void;\n}\n\nexport const OrderControllerUpAndDown = (\n  props: OrderControllerUpAndDownProps\n): JSX.Element => {\n  return (\n    <span>\n      <span key={'asc'} onClick={(): void => props.onClick(true)}>\n        <ChevronUp />\n      </span>\n      <span key={'desc'} onClick={(): void => props.onClick(false)}>\n        <ChevronDown />\n      </span>\n    </span>\n  );\n};\n\ninterface OrderControllerProps {\n  descAsc: boolean;\n  onClick: (a: null) => void;\n}\n\nexport const OrderController = (props: OrderControllerProps): JSX.Element => {\n  const { onClick, descAsc } = props;\n\n  const Icon = descAsc ? ArrowUpward : ArrowDownward;\n\n  return (\n    <small style={{ cursor: 'pointer' }} onClick={(): void => onClick(null)}>\n      <Icon />\n    </small>\n  );\n};\n\ninterface ListWrapperProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListWrapper = (props: ListWrapperProps): JSX.Element => {\n  const { children } = props;\n  return <div className=\"table-responsive-sm\">{children}</div>;\n};\n\ninterface ListContainerProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListContainer = (props: ListContainerProps): JSX.Element => {\n  const { children } = props;\n  return (\n    <TableContainer>\n      <Table>{children}</Table>\n    </TableContainer>\n  );\n};\n\ninterface RowProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const Row = (props: RowProps): JSX.Element => {\n  const { children } = props;\n  return <TableRow>{children}</TableRow>;\n};\n\ninterface ListHeaderProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListHeader = (props: ListHeaderProps): JSX.Element => {\n  const { children } = props;\n  return <TableHead>{children}</TableHead>;\n};\n\ninterface ListBodyProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListBody = (props: ListBodyProps): JSX.Element => {\n  const { children } = props;\n  return <TableBody>{children}</TableBody>;\n};\n\ninterface RecordInfoProps {\n  idx: number;\n  n: number;\n  nPerPage: number;\n}\n\nexport const RecordInfo = (props: RecordInfoProps): JSX.Element | null => {\n  const { nPerPage, idx, n } = props;\n\n  if (n === 0) {\n    return null;\n  }\n\n  const { start, end } = paginationBoundaries(idx, nPerPage);\n\n  return (\n    <p className=\"pull-right\">\n      Showing {start + 1} to {Number(start) + Number(nPerPage) > n ? n : end} of{' '}\n      {n} entries\n    </p>\n  );\n};\n\nexport { GlobalSearch };\n","import Utils from '@nexys/utils';\n\nexport const compareString = (main: string, searchString: string): boolean =>\n  main.toLowerCase().indexOf(searchString.toLowerCase()) > -1;\n\ninterface Search {\n  value: string;\n  func: (d: any, searchValue: string) => boolean;\n}\n\nexport const compare = (\n  main: string | number,\n  search: string | Search,\n  d?: any\n): boolean => {\n  const mainType = typeof main;\n  const searchType = typeof search;\n\n  if (searchType === 'string') {\n    // here casting the `main` so that it can match with the search even if not of the same type\n    switch (mainType) {\n      case 'string':\n        return compareString(main as string, search as string);\n      case 'number':\n        return main === Number(search);\n      default:\n        return false;\n    }\n  }\n\n  if (searchType === 'object') {\n    const searchObj = search as Search;\n\n    if (searchObj.value.length === 0) {\n      return true;\n    }\n\n    return searchObj.func(d, searchObj.value);\n  }\n\n  return false;\n};\n\n// this is a hack that will work for nested objects... leaving like this until better option\nexport const searchInObject = (searchString: string, object: any): boolean =>\n  JSON.stringify(object).toLowerCase().includes(searchString.toLowerCase());\n\n// same as above but only works with linear object, the rsult will be more precise though\nexport const searchInObjectLinear = (\n  searchString: string,\n  object: any\n): boolean =>\n  Object.keys(object)\n    .map(o => {\n      const main = object[o];\n\n      return compare(main, searchString);\n    })\n    .reduce((a, b) => a || b);\n\nexport const applyFilter = (data: any[], filters: any): any[] => {\n  const filterArray = Object.keys(filters).map(f => {\n    return { name: f, value: filters[f] };\n  });\n\n  if (filterArray.length === 0) {\n    return data;\n  }\n\n  return data.filter(d => {\n    return filterArray\n      .map(f => {\n        const searchString = f.value;\n        const key = f.name;\n        const main = Utils.ds.get(key, d);\n\n        if (key === 'globalSearch') {\n          return searchInObject(searchString, d);\n        }\n\n        if (main === null) {\n          return true;\n        }\n\n        return compare(main, searchString, d);\n      })\n      .reduce((a, b) => a && b);\n  });\n};\n\nexport const addRemoveToArray = <T = any>(v: T, a: T[] = []): T[] => {\n  if (!a) {\n    return [v];\n  }\n\n  if (a.includes(v)) {\n    const idx = a.indexOf(v);\n    a.splice(idx, 1);\n\n    return a;\n  }\n\n  a.push(v);\n\n  return a;\n};\n","import React, { useState } from 'react';\n\nimport Utils from '@nexys/utils';\n\nimport {\n  GlobalSearch,\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  Row,\n  ColCell,\n  RecordInfo,\n  NoRow,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody\n} from './ui';\nimport { InnerProps as PaginationProps } from './pagination';\nimport { Config, Definition } from '../types';\nimport { order, orderWithPagination } from './order-utils';\nimport { applyFilter, addRemoveToArray } from './filter-utils';\n\n//const LoaderDefault = (): JSX.Element => <p>Loading...</p>;\n\ninterface State {\n  sortAttribute: string | null;\n  sortDescAsc: boolean;\n  filters: any;\n  pageIdx: number;\n  data: Array<any>;\n}\n\nconst stateDefault: State = {\n  sortAttribute: null,\n  sortDescAsc: true,\n  filters: {},\n  pageIdx: 1,\n  data: []\n};\n\nexport interface Props {\n  HeaderUnit: typeof HeaderUnit;\n  FilterUnit: typeof FilterUnit;\n  OrderController: typeof OrderController;\n  ColCell: typeof ColCell;\n  GlobalSearch: typeof GlobalSearch;\n  NoRow: typeof NoRow;\n  Row: typeof Row;\n  ListWrapper: typeof ListWrapper;\n  ListContainer: typeof ListContainer;\n  ListHeader: typeof ListHeader;\n  ListBody: typeof ListBody;\n  RecordInfo: typeof RecordInfo;\n  Pagination: (props: PaginationProps) => JSX.Element | null;\n}\n\nexport interface InnerProps {\n  def: Definition<any>;\n  data?: any;\n  nPerPage?: number;\n  config?: Config;\n  asyncData?: () => Promise<any>;\n}\n\nconst ListSuper = ({\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  ColCell,\n  GlobalSearch,\n  NoRow,\n  Row,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody,\n  RecordInfo,\n  Pagination\n}: Props) =>\n  function InnerListSuper(props: InnerProps): JSX.Element {\n    const [state, setState] = useState(stateDefault);\n    // todo async\n    //const [ fpData, setPData ] = useState([]);\n    //const [ loading, setLoading ] = useState(true);\n    //const [ n, setN ] = useState(0);\n\n    const { def, config = {}, asyncData } = props; // todo asyn , asyncData = false\n    const { filters, pageIdx, sortAttribute, sortDescAsc, data } = state;\n    const nPerPage = config.nPerPage || props.nPerPage || 25;\n    if (props.nPerPage) {\n      console.warn(\n        'The use of nPerPage in props is deprecated. Add nPerPage to the config object prop.'\n      );\n    }\n\n    // this manages both strings and categories\n    const setFilter = (v: any): void => {\n      if (v.value === null || v.value === '') {\n        delete filters[v.name];\n      } else {\n        // if object\n        if (typeof v.value !== 'string') {\n          if (!filters[v.name]) {\n            filters[v.name] = { value: [], func: v.value.func };\n          }\n\n          filters[v.name].value = addRemoveToArray(\n            v.value.value,\n            filters[v.name].value\n          );\n        } else {\n          // if string\n          filters[v.name] = v.value === '' ? null : v.value;\n        }\n      }\n\n      // when a filter is applied, the page index is reset\n      const pageIdx = 1;\n\n      setState({ ...state, filters, pageIdx });\n    };\n\n    /**\n     * defines order to apply\n     * @param  {[type]} name    attribute/column\n     * @param  {[type]} descAsc true/false - asc or desc. if null, will toggle\n     * @return {[type]}         [description]\n     * todo: allow custom ordering\n     */\n    const setOrder = (name: string, descAsc: boolean | null = null): void => {\n      if (descAsc === null) {\n        descAsc = !sortDescAsc;\n      }\n\n      setState({\n        ...state,\n        pageIdx: 1,\n        sortDescAsc: descAsc,\n        sortAttribute: name\n      });\n    };\n\n    const changePage = (pageIdx: number): void => {\n      // todo block beyond max page\n      if (pageIdx > 0) {\n        setState({ ...state, pageIdx });\n      }\n    };\n\n    const renderHeaders = (): JSX.Element[] => {\n      return def.map((h, i) => {\n        const label = h.label === null ? null : h.label || h.name;\n\n        const order =\n          typeof h.sort === 'boolean' && h.sort === true ? (\n            <OrderController\n              descAsc={sortDescAsc}\n              onClick={(): void => setOrder(h.name)}\n            />\n          ) : null;\n\n        const filter = (\n          <FilterUnit\n            key={i}\n            filters={filters}\n            name={h.name}\n            filter={h.filter}\n            onChange={setFilter}\n          />\n        );\n\n        return (\n          <HeaderUnit key={i}>\n            {label} {order} {filter}\n          </HeaderUnit>\n        );\n      });\n    };\n\n    const renderBody = (data: any): JSX.Element =>\n      data.map((row: any, i: number) => (\n        <tr key={i}>\n          {def.map((h, j) => {\n            return (\n              <ColCell key={j}>\n                {h.render ? h.render(row) : Utils.ds.get(h.name, row)}\n              </ColCell>\n            );\n          })}\n        </tr>\n      ));\n\n    /*\n  // todo async\n  if (asyncData && loading) {\n    asyncData(state).then(p => {\n      setPData(p);\n      setN(p.length);\n      setLoading(false);\n    });\n\n    return <Loader/>;\n  }\n\n  if(loading) {\n    const fData = applyFilter(data, filters);\n    setLoading(false);\n    setN(fData.length);\n    setPData(orderWithPagination(order(fData, sortAttribute, sortDescAsc), pageIdx, nPerPage));\n  }*/\n    if (data.length === 0) {\n      if (asyncData)\n        asyncData().then(res => {\n          setState({ ...state, data: res });\n        });\n      else {\n        if (props.data.length) {\n          setState({ ...state, data: props.data });\n        }\n      }\n    }\n    const fData = applyFilter(data, filters);\n    const n = fData.length;\n    const fpData = orderWithPagination(\n      order(fData, sortAttribute ? sortAttribute : '', sortDescAsc),\n      pageIdx,\n      nPerPage\n    );\n\n    const showPagination =\n      typeof config.pagination !== 'undefined' ? config.pagination : true;\n\n    return (\n      <ListWrapper>\n        <GlobalSearch config={config} onChange={setFilter} filters={filters} />\n        <ListContainer>\n          <ListHeader>\n            <Row>{renderHeaders()}</Row>\n          </ListHeader>\n\n          <ListBody>{renderBody(fpData)}</ListBody>\n        </ListContainer>\n\n        <RecordInfo n={n} idx={pageIdx} nPerPage={nPerPage} />\n\n        {showPagination && n > nPerPage && (\n          <Pagination\n            n={n}\n            nPerPage={nPerPage}\n            idx={pageIdx}\n            onClick={changePage}\n          />\n        )}\n\n        <NoRow n={n} />\n      </ListWrapper>\n    );\n  };\n\nexport default ListSuper;\n","/**\n * get the number of pages\n * @param  {[type]} n        total number of rows\n * @param  {[type]} nPerPage number of rows per page\n * @return {[type]}          number of pages\n */\nexport const getNPage = (n: number, nPerPage: number): number => {\n  return Math.ceil(n / nPerPage);\n};\n\ninterface GetPaginationReturn {\n  idx: number;\n  nPerPage: number;\n  nPage: number;\n}\n\nexport const getPagination = (\n  n: number,\n  nPerPageIn: number\n): GetPaginationReturn => {\n  const nPerPage = nPerPageIn || 10;\n  const nPage = getNPage(n, nPerPage);\n  const idx = 1;\n\n  return {\n    idx,\n    nPerPage,\n    nPage\n  };\n};\n\n/**\n * get list of page based on the index (-i means that there's a gap - we do not use null so that it can than be used as an index)\n * @param  {[type]} idx   the page on which the user id\n * @param  {[type]} nPage the total amount of pages\n * @return {[type]}       [1, null, idx - 1, idx, idx + 1, null, nPage]\n */\nexport const getPageTiles = (idx: number, nPage: number): any[] => {\n  if (idx < 1) {\n    idx = 1;\n  }\n\n  if (idx > nPage) {\n    idx = nPage;\n  }\n\n  const b1 = idx - 1;\n  const b2 = idx + 1;\n\n  // init array\n  const arr = [idx];\n\n  if (idx > 1) {\n    arr.unshift(b1);\n  }\n\n  if (idx === nPage && nPage > 3) {\n    arr.unshift(b1 - 1);\n  }\n\n  if (idx < nPage) {\n    arr.push(b2);\n  }\n\n  if (idx === 1 && nPage > 3) {\n    arr.push(3);\n  }\n\n  if (b1 > 2 && nPage > 4) {\n    arr.unshift(-1);\n  }\n\n  if (b1 > 1) {\n    arr.unshift(1);\n  }\n\n  if (b2 < nPage - 1 && nPage > 4) {\n    arr.push(-2);\n  }\n\n  if (b2 < nPage) {\n    arr.push(nPage);\n  }\n\n  return arr;\n};\n","/**\n * Pagination from MUI\n * it is easy to create your own version, by using this file as an example\n * see\n * https://material-ui.com/api/pagination/#props\n * https://material-ui.com/api/pagination-item/#props\n * https://material-ui.com/components/pagination/#basic-pagination\n */\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PaginationMaterial from '@material-ui/lab/Pagination';\nimport { getPagination } from './pagination-utils';\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  })\n);\n\nexport interface InnerProps {\n  idx: number;\n  n: number;\n  nPerPage: number;\n  onClick: (num: number) => void;\n}\n\nconst Pagination = (props: InnerProps): JSX.Element | null => {\n  const { n, nPerPage, idx, onClick } = props;\n  const classes = useStyles();\n\n  if (n === 0) {\n    return null;\n  }\n\n  const { nPage } = getPagination(n, nPerPage);\n\n  return (\n    <div className={classes.root}>\n      <PaginationMaterial\n        page={idx}\n        onChange={(a, b) => onClick(b)}\n        count={nPage}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import {\n  GlobalSearch,\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  Row,\n  ColCell,\n  RecordInfo,\n  NoRow,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody\n  //PaginationUnit,PaginationWrapper\n} from './ui';\n\nimport ListSuper from './list-super';\nimport PaginationMaterial from './pagination-material';\n\n// by default we use the pagination from Material UI\nconst Pagination = PaginationMaterial; // PaginationSuper({ PaginationUnit, PaginationWrapper });\n\nconst List = ListSuper({\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  ColCell,\n  GlobalSearch,\n  NoRow,\n  Row,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody,\n  RecordInfo,\n  Pagination\n});\n\nexport default List;\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: (\n        <Tooltip title=\"Something about name\">\n          <span>Name</span>\n        </Tooltip>\n      ),\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Config, Definition } from '../lib/types';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config: Config = {\n    nPerPage: 7\n  };\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Pagination = (): JSX.Element => {\n  const [itemsPerPage, setItemsPerPage] = React.useState(10);\n\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const handlePageNumber = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = Math.ceil(Number(e.target.value));\n    setItemsPerPage(value > 0 ? value : 1);\n  };\n\n  return (\n    <>\n      <h2>Pagination example</h2>\n      <Grid md={2} item={true}>\n        # of records per page\n        <input\n          width=\"20%\"\n          type=\"number\"\n          value={itemsPerPage}\n          onChange={handlePageNumber}\n        />\n      </Grid>\n\n      <List data={data} def={columns} nPerPage={itemsPerPage} />\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport { Config, Definition } from '../lib/types';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config: Config = {\n    pagination: false\n  };\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Filters = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  return (\n    <>\n      <h2>Filter example</h2>\n      <List data={data} def={columns} config={{ search: true }} />\n    </>\n  );\n};\n\nexport default Filters;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Sorting = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      key: 'capital',\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || '',\n      sort: true\n    },\n    {\n      name: 'currency',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config = {};\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Sorting;\n","import React from 'react';\n\nimport Alert from '../lib/components/alert';\n\nconst MyAlert = (): JSX.Element => {\n  return <Alert type={'info'}>Some content</Alert>;\n};\n\nexport default MyAlert;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\ninterface Continent {\n  id: number;\n  name: string;\n}\n\ninterface Country {\n  name: string;\n}\n\ninterface Animal {\n  id: number;\n  check?: boolean;\n  name: string;\n  location: Continent;\n  country: Country;\n  amount: number;\n  int: number;\n  date: string;\n}\n\nconst af: Continent = { id: 1, name: 'Africa' };\nconst eu: Continent = { id: 2, name: 'Europe' };\nconst as: Continent = { id: 3, name: 'Asia' };\nconst am: Continent = { id: 4, name: 'America' };\n\nconst data: Animal[] = [\n  {\n    id: 2,\n    check: true,\n    name: 'Sheep',\n    location: eu,\n    country: { name: 'United Kingdom' },\n    amount: 23.3,\n    int: 23,\n    date: '2019-09-05'\n  },\n  {\n    id: 3,\n    name: 'Tiger',\n    location: as,\n    country: { name: 'India' },\n    amount: 24.1,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 4,\n    name: 'Elephant',\n    location: af,\n    country: { name: 'Tanzania' },\n    amount: 23,\n    int: 3,\n    date: '2019-09-05'\n  },\n  {\n    id: 5,\n    name: 'Lion',\n    location: af,\n    country: { name: 'South Africa' },\n    amount: 0.3,\n    int: 2,\n    date: '2019-09-05'\n  },\n  {\n    id: 6,\n    name: 'Cat',\n    location: eu,\n    country: { name: 'Germany' },\n    amount: 2.31,\n    int: 7,\n    date: '2019-09-05'\n  },\n  {\n    id: 7,\n    name: 'Grizzly',\n    location: am,\n    country: { name: 'Canada' },\n    amount: 3.35,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 8,\n    name: 'Antelope',\n    location: af,\n    country: { name: 'Namibia' },\n    amount: 2.3,\n    int: 87,\n    date: '2019-09-05'\n  }\n];\n\nconst def: Definition<Animal, Continent> = [\n  { name: 'name', filter: true, sort: true },\n  {\n    name: 'location.name',\n    filter: {\n      type: 'category',\n      func: (a, b): boolean => b.includes(a.location.id),\n      options: [af, eu, as, am]\n    }\n  },\n  { name: 'country.name', label: 'Country', filter: true },\n  { name: 'amount', label: 'A long label', filter: true },\n  { name: 'int', label: 'd', filter: true },\n  { name: 'date', label: 'a date', filter: true },\n  {\n    name: 'random',\n    label: 'custom',\n    render: (x): string => 'custom' + x.location.name\n  }\n];\n\nconst Small = (): JSX.Element => (\n  <List data={data} def={def} config={{ search: true }} nPerPage={3} />\n);\n\nexport default Small;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\ninterface Continent {\n  id: number;\n  name: string;\n}\n\ninterface Country {\n  name: string;\n}\n\ninterface Animal {\n  id: number;\n  check?: boolean;\n  name: string;\n  location: Continent;\n  country: Country;\n  amount: number;\n  int: number;\n  date: string;\n}\n\ntype Animals = Animal[];\n\nconst af: Continent = { id: 1, name: 'Africa' };\nconst eu: Continent = { id: 2, name: 'Europe' };\nconst as: Continent = { id: 3, name: 'Asia' };\nconst am: Continent = { id: 4, name: 'America' };\n\nconst data: Animals = [\n  {\n    id: 2,\n    check: true,\n    name: 'Sheep',\n    location: eu,\n    country: { name: 'United Kingdom' },\n    amount: 23.3,\n    int: 23,\n    date: '2019-09-05'\n  },\n  {\n    id: 3,\n    name: 'Tiger',\n    location: as,\n    country: { name: 'India' },\n    amount: 24.1,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 4,\n    name: 'Elephant',\n    location: af,\n    country: { name: 'Tanzania' },\n    amount: 23,\n    int: 3,\n    date: '2019-09-05'\n  },\n  {\n    id: 5,\n    name: 'Lion',\n    location: af,\n    country: { name: 'South Africa' },\n    amount: 0.3,\n    int: 2,\n    date: '2019-09-05'\n  },\n  {\n    id: 6,\n    name: 'Cat',\n    location: eu,\n    country: { name: 'Germany' },\n    amount: 2.31,\n    int: 7,\n    date: '2019-09-05'\n  },\n  {\n    id: 7,\n    name: 'Grizzly',\n    location: am,\n    country: { name: 'Canada' },\n    amount: 3.35,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 8,\n    name: 'Antelope',\n    location: af,\n    country: { name: 'Namibia' },\n    amount: 2.3,\n    int: 87,\n    date: '2019-09-05'\n  }\n];\n\nconst def: Definition<Animal, Continent> = [\n  { name: 'name', filter: true, sort: true },\n  {\n    name: 'location.name',\n    filter: {\n      type: 'category',\n      func: (a, b): boolean => b.includes(a.location.id),\n      options: [af, eu, as, am]\n    }\n  },\n  { name: 'country.name', label: 'Country', filter: true },\n  { name: 'amount', label: 'A long label', filter: true },\n  { name: 'int', label: 'd', filter: true },\n  { name: 'date', label: 'a date', filter: true },\n  {\n    name: 'random',\n    label: 'custom',\n    render: (x): string => 'custom' + x.location.name\n  }\n];\n\nconst asyncData = (): Promise<Definition<Animal, Continent>> =>\n  new Promise<Definition<Animal, Continent>>(resolve => resolve(data));\n\nconst AsyncExample = (): JSX.Element => (\n  <List\n    def={def}\n    config={{ search: true }}\n    asyncData={asyncData}\n    nPerPage={3}\n  />\n);\n\nexport default AsyncExample;\n","import Main from './main';\nimport NPerPage from './nperpage';\nimport Pagination from './pagination';\nimport NoPagination from './no-pagination';\nimport Filters from './filters';\nimport Sorting from './sorting';\nimport Alert from './alert';\nimport Small from './small';\nimport Async from './async';\nimport Checkbox from './checkbox';\n\nexport const list = [\n  { label: 'Main', path: '/table', Component: Main },\n  { label: 'N Per Page in Config', path: '/nperpage', Component: NPerPage },\n  { label: 'Pagination', path: '/pagination', Component: Pagination },\n  { label: 'No Pagination', path: '/no-pagination', Component: NoPagination },\n  { label: 'Filtering', path: '/filters', Component: Filters },\n  { label: 'Sorting', path: '/sorting', Component: Sorting },\n  { label: 'Checks', path: '/checks', Component: Checkbox },\n  { label: 'Small', path: '/small', Component: Small },\n  { label: 'Async', path: '/async', Component: Async },\n  { label: 'Alert', path: '/alert', Component: Alert }\n];\n","import React from 'react';\nimport { Checkbox } from '@material-ui/core';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst CheckboxExample = (): JSX.Element => {\n  const [selected, setSelected] = React.useState<string[]>([]);\n\n  const onCheckClick = (id: string): void => {\n    const idx = selected.indexOf(id);\n\n    if (idx < 0) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter((_, i) => i !== idx));\n    }\n  };\n\n  const renderCheckbox = (\n    x: Country,\n    onCheckClick: (id: string) => void\n  ): JSX.Element => (\n    <Checkbox onClick={(): void => onCheckClick(x.name.common)} />\n  );\n\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns = (onCheckClick: (id: string) => void): Definition<Country> => [\n    {\n      name: 'id',\n      render: (x): JSX.Element => renderCheckbox(x, onCheckClick)\n    },\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config = {};\n\n  return (\n    <>\n      {JSON.stringify(selected)}\n      <h2>Simple table example</h2>\n      <List data={data} def={columns(onCheckClick)} config={config} />\n    </>\n  );\n};\n\nexport default CheckboxExample;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { list } from '../list';\n\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Drawer,\n  IconButton\n} from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ChevronLeft as ChevronLeftIcon } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  }\n}));\n\ninterface ListUnitProps {\n  label: string;\n  path: string;\n}\n\nconst ListUnit = (props: ListUnitProps): JSX.Element => {\n  const { label, path } = props;\n  return (\n    <Link to={path}>\n      <ListItem button>\n        <ListItemText primary={label} />\n      </ListItem>\n    </Link>\n  );\n};\n\nconst mainListItems = list.map((l, i) => (\n  <ListUnit key={i} path={l.path} label={l.label} />\n));\n\ninterface LeftNavProps {\n  onClose: () => void;\n  open: boolean;\n}\n\nconst LeftNav = (props: LeftNavProps): JSX.Element => {\n  const { onClose, open } = props;\n  const classes = useStyles();\n\n  const handleDrawerClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      }}\n      open={open}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListUnit label={'Home'} path={'/'} />\n        {mainListItems}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default LeftNav;\n","import React from 'react';\n\nimport {\n  CssBaseline,\n  AppBar,\n  Container,\n  Toolbar,\n  IconButton,\n  Typography,\n  Grid,\n  Paper\n} from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//import Link as LinkMUI from '@material-ui/core/Link';\nimport { Menu as MenuIcon } from '@material-ui/icons';\n\nimport Footer from './footer';\nimport LeftNav from './left';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n}\n\nconst Index = ({ children }: Props): JSX.Element => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = (): void => {\n    setOpen(true);\n  };\n\n  const handleClose = (): void => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            MUI-List\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <LeftNav open={open} onClose={handleClose} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>{children}</Paper>\n            </Grid>\n          </Grid>\n          <Footer />\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\n\nimport { Router, Switch, Route } from 'react-router-dom';\nimport * as History from 'history';\n\nimport Public from './public';\nimport Layout from './layout';\nimport { list } from './list';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst Routes = (): JSX.Element => (\n  <Router history={history}>\n    <Layout>\n      <Switch>\n        {list.map((l, i) => (\n          <Route\n            key={i}\n            exact\n            path={l.path}\n            component={(): JSX.Element => <l.Component />}\n          />\n        ))}\n        <Route component={(): JSX.Element => <Public />} />\n      </Switch>\n    </Layout>\n  </Router>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}