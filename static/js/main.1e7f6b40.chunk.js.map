{"version":3,"sources":["lib/list/list-super-partials/type.ts","public.tsx","layout/footer.tsx","lib/components/alert.tsx","lib/list/utils/pagination-utils.ts","lib/list/ui/form.tsx","lib/list/ui/global-search.tsx","lib/list/ui/popover-filter.tsx","lib/list/ui/filter-unit.tsx","lib/list/ui/loader.tsx","lib/list/ui/index.tsx","lib/list/utils/order-utils.ts","lib/list/utils/filter-utils.ts","lib/list/list-super-partials/reducer.ts","lib/list/list-super-partials/state.ts","lib/list/list-super.tsx","lib/list/pagination-material.tsx","lib/list/index.ts","list/main.tsx","list/nperpage.tsx","list/pagination.tsx","list/no-pagination.tsx","list/filters.tsx","list/sorting.tsx","list/alert.tsx","list/small.tsx","list/async.tsx","list/index.ts","list/checkbox.tsx","layout/left.tsx","layout/index.tsx","routes.tsx","serviceWorker.ts","index.tsx"],"names":["ActionType","Default","href","Code","Copyright","Typography","variant","color","align","Date","getFullYear","Footer","Box","pt","Alert","props","type","children","severity","getPagination","n","nPerPageIn","nPerPage","idx","nPage","Math","ceil","getNPage","paginationBoundaries","start","end","withPagination","data","slice","SearchUnit","React","useState","value","setValue","name","onChange","placeholder","TextField","String","e","target","v","GlobalSearch","filters","config","search","className","k","useStyles","makeStyles","theme","createStyles","content","padding","spacing","PopoverFilter","classes","anchorEl","setAnchorEl","open","Boolean","isActive","IconButton","onClick","event","currentTarget","style","FilterList","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FilterUnit","filter","func","Array","isArray","options","FormControl","component","FormGroup","map","option","i","FormControlLabel","key","control","Checkbox","checked","includes","label","RadioGroup","aria-label","toString","marginRight","Radio","Loader","NoRow","ColCell","colSpan","TableCell","HeaderUnit","fontWeight","OrderController","descAsc","Icon","SortDefault","ChevronUp","ChevronDown","cursor","display","ListWrapper","ListContainer","TableContainer","Table","size","Row","TableRow","ListHeader","TableHead","ListBody","TableBody","RecordInfo","Number","getAttribute","attribute","a","ac","toLocaleLowerCase","compareFunc","b","attributeOrFunc","bc","getCompareAttributes","order","sortAttribute","sortDescAsc","ordered","sort","reverse","toFilterArray","Object","entries","compare","main","searchString","toLowerCase","indexOf","compareString","applyFilter","filterArray","length","d","f","object","JSON","stringify","reduce","listSuperReducer","state","action","FETCH_DATA_REQUEST","loading","FETCH_DATA_SUCCESS","payload","numberOfTotalRows","FILTER_CHANGE","pageIdx","ORDER_CHANGE","PAGE_CHANGE","getInitialState","ListSuper","Pagination","useReducer","dispatch","def","asyncData","console","warn","fetchData","useCallback","then","res","meta","useEffect","handleFilterChange","splice","push","addRemoveToArray","updateFilters","fData","fpData","find","x","Error","getSort","showPagination","pagination","showRecordInfo","recordInfo","h","isSort","setOrder","row","j","render","Utils","ds","get","renderBody","root","marginTop","page","_a","count","List","Main","columns","Tooltip","title","encodeURIComponent","common","capital","keys","currencies","itemsPerPage","setItemsPerPage","Grid","md","item","width","Filters","dataItem","filterValue","filterValues","filtered","currency","region","Sorting","MyAlert","af","id","eu","as","am","check","location","country","amount","int","date","Small","filteredData","orderedData","undefined","Promise","r","setTimeout","AsyncExample","list","path","Component","NPerPage","NoPagination","selected","setSelected","renderNameLink","onCheckClick","renderCheckbox","_","Async","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","flexGrow","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","ListUnit","to","ListItem","button","ListItemText","primary","mainListItems","l","LeftNav","Drawer","paper","clsx","ChevronLeft","Divider","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","menuButtonHidden","appBarSpacer","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","Index","setOpen","CssBaseline","AppBar","Toolbar","edge","Menu","noWrap","Container","maxWidth","xs","Paper","history","History","basename","process","Routes","exact","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e7f6b40.chunk.js","sourcesContent":["export type FiltersType<A> = { [k in keyof A | 'globalSearch']?: any };\n\nexport interface State<A> {\n  sortAttribute?: keyof A;\n  sortDescAsc: boolean;\n  filters: FiltersType<A>;\n  pageIdx: number;\n  data: A[];\n  numberOfTotalRows: number;\n  loading: boolean;\n}\n\nexport enum ActionType {\n  FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST',\n  FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS',\n  FILTER_CHANGE = 'FILTER_CHANGE',\n  ORDER_CHANGE = 'ORDER_CHANGE',\n  PAGE_CHANGE = 'PAGE_CHANGE'\n}\n\nexport interface Action {\n  type: ActionType;\n  payload?: any;\n}\n","import React from 'react';\n\nimport { Code as CodeIcon } from '@material-ui/icons';\n\nconst Default = (): JSX.Element => (\n  <div>\n    <p>Select an option from the menu above</p>\n\n    <p>\n      <a href=\"https://github.com/Nexysweb/mui-list-ts\">\n        <CodeIcon /> Source\n      </a>{' '}\n      available under MIT license.\n    </p>\n  </div>\n);\n\nexport default Default;\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nconst Copyright = (): JSX.Element => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      Copyright &copy; Nexys {new Date().getFullYear()}\n    </Typography>\n  );\n};\n\nconst Footer = (): JSX.Element => {\n  return (\n    <Box pt={4}>\n      <Copyright />\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport { Alert as MUIAlert } from '@material-ui/lab';\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n  type?: 'error' | 'success' | 'info' | 'warning';\n}\n\nconst Alert = (props: Props): JSX.Element => {\n  const { type = 'success', children } = props;\n  return <MUIAlert severity={type}>{children}</MUIAlert>;\n};\n\nexport default Alert;\n","/**\n * get the number of pages\n * @param  {[type]} n        total number of rows\n * @param  {[type]} nPerPage number of rows per page\n * @return {[type]}          number of pages\n */\nexport const getNPage = (n: number, nPerPage: number): number => {\n  return Math.ceil(n / nPerPage);\n};\n\ninterface GetPaginationReturn {\n  idx: number;\n  nPerPage: number;\n  nPage: number;\n}\n\nexport const getPagination = (\n  n: number,\n  nPerPageIn: number\n): GetPaginationReturn => {\n  const nPerPage = nPerPageIn || 10;\n  const nPage = getNPage(n, nPerPage);\n  const idx = 1;\n\n  return {\n    idx,\n    nPerPage,\n    nPage\n  };\n};\n\n/**\n * get list of page based on the index (-i means that there's a gap - we do not use null so that it can than be used as an index)\n * @param  {[type]} idx   the page on which the user id\n * @param  {[type]} nPage the total amount of pages\n * @return {[type]}       [1, null, idx - 1, idx, idx + 1, null, nPage]\n */\nexport const getPageTiles = (idx: number, nPage: number): any[] => {\n  if (idx < 1) {\n    idx = 1;\n  }\n\n  if (idx > nPage) {\n    idx = nPage;\n  }\n\n  const b1 = idx - 1;\n  const b2 = idx + 1;\n\n  // init array\n  const arr = [idx];\n\n  if (idx > 1) {\n    arr.unshift(b1);\n  }\n\n  if (idx === nPage && nPage > 3) {\n    arr.unshift(b1 - 1);\n  }\n\n  if (idx < nPage) {\n    arr.push(b2);\n  }\n\n  if (idx === 1 && nPage > 3) {\n    arr.push(3);\n  }\n\n  if (b1 > 2 && nPage > 4) {\n    arr.unshift(-1);\n  }\n\n  if (b1 > 1) {\n    arr.unshift(1);\n  }\n\n  if (b2 < nPage - 1 && nPage > 4) {\n    arr.push(-2);\n  }\n\n  if (b2 < nPage) {\n    arr.push(nPage);\n  }\n\n  return arr;\n};\n\nexport const paginationBoundaries = (\n  idx: number,\n  nPerPage: number\n): { start: number; end: number } => {\n  const start = (idx - 1) * nPerPage;\n  const end = idx * nPerPage;\n\n  return { start, end };\n};\n\nexport const withPagination = <A>(\n  data: A[],\n  idx: number,\n  nPerPage: number\n): A[] => {\n  const { start, end } = paginationBoundaries(idx, nPerPage);\n\n  return data.slice(start, end);\n};\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport interface InputValue {\n  name: string;\n  value: string;\n}\n\ninterface Props<A> {\n  name: keyof A | 'id' | 'uuid';\n  onChange: (inputValue: InputValue) => void;\n  value: string;\n  placeholder?: string;\n}\n\nexport const SearchUnit = <A,>(props: Props<A>): JSX.Element => {\n  const [value, setValue] = React.useState(props.value || '');\n  const { name, onChange, placeholder } = props;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = e.target.value;\n    const v: InputValue = { name: String(name), value };\n    setValue(value);\n    onChange(v);\n  };\n\n  return (\n    <TextField\n      name={String(name)}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}\n    />\n  );\n};\n","import React from 'react';\n\nimport { Config } from '../../types';\nimport { SearchUnit } from './form';\ninterface Props {\n  config: Config;\n  filters: any;\n  onChange: (inputValue: { name: 'globalSearch'; value: any }) => void;\n}\n\nconst keyName = 'globalSearch';\n\nconst GlobalSearch = (props: Props): JSX.Element | null => {\n  const { onChange, filters, config } = props;\n\n  if (!config.search) {\n    return null;\n  }\n\n  const value = filters[keyName];\n\n  return (\n    <div className=\"pull-right\">\n      <SearchUnit\n        onChange={(k): void => onChange({ name: keyName, value: k.value })}\n        name={keyName}\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default GlobalSearch;\n","import React from 'react';\nimport { IconButton, Popover } from '@material-ui/core';\nimport { FilterList as FilterListIcon } from '@material-ui/icons';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing(1, 2)\n    }\n  })\n);\n\ninterface PopoverFilterProps {\n  children: React.ReactNode | JSX.Element;\n  isActive?: boolean;\n}\n\nconst PopoverFilter = (props: PopoverFilterProps): JSX.Element => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const { children, isActive } = props;\n\n  return (\n    <>\n      <IconButton\n        onClick={handleClick}\n        style={{ color: isActive ? '#000' : '#ccc' }}\n      >\n        <FilterListIcon />\n      </IconButton>\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <div className={classes.content}>{children}</div>\n      </Popover>\n    </>\n  );\n};\n\nexport default PopoverFilter;\n","import React from 'react';\nimport {\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormGroup,\n  Checkbox\n} from '@material-ui/core';\n\nimport { Filter } from '../../types/filter';\nimport { SearchUnit } from './form';\nimport PopoverFilter from './popover-filter';\n\ninterface CheckboxInputValue<A> {\n  name: keyof A;\n  value: {\n    func: Function;\n    value: number | string;\n  };\n}\n\ninterface FilterUnitProps<A> {\n  filter?: boolean | Filter<A>;\n  filters: any;\n  name: keyof A | 'id' | 'uuid';\n  onChange: (\n    inputValue:\n      | { name: keyof A | 'id' | 'uuid'; value: any; type?: string }\n      | CheckboxInputValue<A>\n  ) => void;\n}\n\nconst FilterUnit = <A,>(props: FilterUnitProps<A>): JSX.Element | null => {\n  const { filter, filters, name, onChange } = props;\n\n  if (typeof filter === 'boolean' && filter === true) {\n    return (\n      <PopoverFilter isActive={filters[name]}>\n        <SearchUnit\n          name={name}\n          value={filters[name]}\n          onChange={(v): void => onChange({ name, value: v.value })}\n        />\n      </PopoverFilter>\n    );\n  }\n\n  if (typeof filter === 'object' && filter.type === 'string') {\n    return (\n      <PopoverFilter isActive={filters[name]}>\n        <SearchUnit\n          name={name}\n          value={filters[name] ? filters[name].value.value : ''}\n          onChange={(v): void => {\n            onChange({\n              name,\n              value: { value: v.value, func: filter.func }\n            });\n          }}\n          placeholder=\"Type to filter...\"\n        />\n      </PopoverFilter>\n    );\n  }\n\n  if (typeof filter === 'object' && Array.isArray(filter.options)) {\n    if (filter.type === 'category') {\n      const v = filters[name] ? filters[name].value : [];\n\n      return (\n        <PopoverFilter isActive={filters[name]}>\n          <FormControl component=\"fieldset\">\n            <FormGroup>\n              {filter.options.map((option, i) => (\n                <FormControlLabel\n                  key={i}\n                  value={option.key}\n                  control={\n                    <Checkbox\n                      checked={v.includes(option.key)}\n                      onChange={(): void =>\n                        onChange({\n                          name,\n                          value: {\n                            value: option.key,\n                            func: filter.func\n                          },\n                          type: filter.type\n                        })\n                      }\n                    />\n                  }\n                  label={option.value}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </PopoverFilter>\n      );\n    }\n\n    if (filter.type === 'select') {\n      const value = filters[name] ? filters[name].value.value : '';\n      return (\n        <PopoverFilter isActive={filters[name]}>\n          <FormControl component=\"fieldset\">\n            <RadioGroup aria-label={name.toString()} value={value}>\n              {filter.options.map((option, i) => (\n                <FormControlLabel\n                  key={i}\n                  value={option.key}\n                  style={{ marginRight: 0 }}\n                  control={\n                    <Radio\n                      onChange={(): void =>\n                        onChange({\n                          name,\n                          value: {\n                            value: option.key,\n                            func: filter.func\n                          },\n                          type: filter.type\n                        })\n                      }\n                    />\n                  }\n                  label={option.value}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n        </PopoverFilter>\n      );\n    }\n  }\n\n  return null;\n};\n\nexport default FilterUnit;\n","import React from 'react';\n\nconst Loader = (): JSX.Element => <p>Loading...</p>;\n\nexport default Loader;\n","import React from 'react';\n\nimport Alert from '../../components/alert';\nimport { paginationBoundaries } from '../utils/pagination-utils';\nimport GlobalSearch from './global-search';\nimport PopoverFilter from './popover-filter';\nimport FilterUnit from './filter-unit';\nimport Loader from './loader';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableHead,\n  TableContainer\n} from '@material-ui/core';\n\nimport {\n  KeyboardArrowUp as ChevronUp,\n  KeyboardArrowDown as ChevronDown,\n  UnfoldMore as SortDefault\n} from '@material-ui/icons';\n\ninterface NoRowProps {\n  n: number;\n}\n\nexport const NoRow = (props: NoRowProps): JSX.Element | null => {\n  if (props.n > 0) {\n    return null;\n  }\n\n  return <Alert type=\"warning\">No rows found</Alert>;\n};\n\ninterface PaginationWrapperProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const PaginationWrapper = (\n  props: PaginationWrapperProps\n): JSX.Element => {\n  return (\n    <nav>\n      <ul className=\"pagination\">{props.children}</ul>\n    </nav>\n  );\n};\n\ninterface PaginationUnitProps {\n  children: React.ReactNode | JSX.Element;\n  isActive?: boolean;\n  isDisabled?: boolean;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const PaginationUnit = (\n  props: PaginationUnitProps\n): JSX.Element | null => {\n  const { isActive, isDisabled, children, onClick } = props;\n\n  // here we disable the button in case it is not valid\n  if (isDisabled) {\n    return null;\n  }\n\n  const className =\n    'page-item' + (isActive ? ' active' : '') + (isDisabled ? ' disabled' : '');\n\n  return (\n    <li className={className}>\n      <button className=\"page-link\" onClick={onClick}>\n        {children}\n      </button>\n    </li>\n  );\n};\n\ninterface ColCellProps {\n  children: React.ReactNode | JSX.Element;\n  colSpan?: number;\n}\n\nexport const ColCell = (props: ColCellProps): JSX.Element => {\n  const { children, colSpan } = props;\n  return <TableCell colSpan={colSpan}>{children}</TableCell>;\n};\n\ninterface HeaderUnitProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const HeaderUnit = (props: HeaderUnitProps): JSX.Element => {\n  const { children } = props;\n\n  return <TableCell style={{ fontWeight: 'bold' }}>{children}</TableCell>;\n};\n\ninterface OrderControllerUpAndDownProps {\n  onClick: (isAscending: boolean) => void;\n}\n\nexport const OrderControllerUpAndDown = (\n  props: OrderControllerUpAndDownProps\n): JSX.Element => {\n  return (\n    <span>\n      <span key={'asc'} onClick={(): void => props.onClick(true)}>\n        <ChevronUp />\n      </span>\n      <span key={'desc'} onClick={(): void => props.onClick(false)}>\n        <ChevronDown />\n      </span>\n    </span>\n  );\n};\n\ninterface OrderControllerProps {\n  descAsc: boolean | null;\n  onClick: (a: null) => void;\n}\n\nexport const OrderController = (props: OrderControllerProps): JSX.Element => {\n  const { onClick, descAsc } = props;\n\n  let Icon = SortDefault;\n  if (descAsc !== null) {\n    Icon = descAsc ? ChevronUp : ChevronDown;\n  }\n\n  return (\n    <div\n      style={{\n        cursor: 'pointer',\n        display: 'inline-block',\n        color: descAsc === null ? '#ccc' : '#000'\n      }}\n      onClick={(): void => onClick(null)}\n    >\n      <Icon />\n    </div>\n  );\n};\n\ninterface ListWrapperProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListWrapper = (props: ListWrapperProps): JSX.Element => {\n  const { children } = props;\n  return <div className=\"table-responsive-sm\">{children}</div>;\n};\n\ninterface ListContainerProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListContainer = (props: ListContainerProps): JSX.Element => {\n  const { children } = props;\n  return (\n    <TableContainer>\n      <Table size=\"small\">{children}</Table>\n    </TableContainer>\n  );\n};\n\ninterface RowProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const Row = (props: RowProps): JSX.Element => {\n  const { children } = props;\n  return <TableRow>{children}</TableRow>;\n};\n\ninterface ListHeaderProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListHeader = (props: ListHeaderProps): JSX.Element => {\n  const { children } = props;\n  return <TableHead>{children}</TableHead>;\n};\n\ninterface ListBodyProps {\n  children: React.ReactNode | JSX.Element;\n}\n\nexport const ListBody = (props: ListBodyProps): JSX.Element => {\n  const { children } = props;\n  return <TableBody>{children}</TableBody>;\n};\n\ninterface RecordInfoProps {\n  idx: number;\n  n: number;\n  nPerPage: number;\n}\n\nexport const RecordInfo = (props: RecordInfoProps): JSX.Element | null => {\n  const { nPerPage, idx, n } = props;\n\n  if (n === 0) {\n    return null;\n  }\n\n  const { start, end } = paginationBoundaries(idx, nPerPage);\n\n  return (\n    <p className=\"pull-right\">\n      Showing {start + 1} to {Number(start) + Number(nPerPage) > n ? n : end} of{' '}\n      {n} entries\n    </p>\n  );\n};\n\nexport { FilterUnit, GlobalSearch, PopoverFilter, Loader };\n","import { SortCompareOut, DefinitionItem } from '../../types';\n\nexport const getAttribute = <A>(attribute: keyof A, a: A): SortCompareOut => {\n  const ac = String(a[attribute]);\n\n  if (typeof ac === 'number' && typeof ac === 'boolean') {\n    return ac;\n  }\n\n  return String(ac).toLocaleLowerCase();\n};\n\nconst getCompareAttributes = <A>(\n  a: A,\n  b: A,\n  attributeOrFunc: keyof A | ((input: A) => SortCompareOut)\n): { ac: SortCompareOut; bc: SortCompareOut } => {\n  if (typeof attributeOrFunc === 'function') {\n    const ac = attributeOrFunc(a);\n    const bc = attributeOrFunc(b);\n\n    return { ac, bc };\n  }\n\n  const ac = getAttribute<A>(attributeOrFunc, a);\n  const bc = getAttribute<A>(attributeOrFunc, b);\n\n  return { ac, bc };\n};\n\nconst compareFunc = <A>(\n  a: A,\n  b: A,\n  attributeOrFunc: keyof A | ((input: A) => SortCompareOut)\n): number => {\n  const { ac, bc } = getCompareAttributes<A>(a, b, attributeOrFunc);\n\n  if (ac < bc) {\n    return -1;\n  }\n  if (ac > bc) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const order = <A>(\n  data: A[],\n  sortAttribute: keyof A | ((input: A) => SortCompareOut),\n  sortDescAsc: boolean\n): A[] => {\n  if (!sortAttribute) {\n    return data;\n  }\n\n  const ordered: A[] = data.sort((a, b) => compareFunc<A>(a, b, sortAttribute));\n\n  if (sortDescAsc === false) {\n    return ordered.reverse();\n  }\n\n  return ordered;\n};\n\nexport const getSort = <A>(\n  def: DefinitionItem<A>[],\n  sortAttribute: keyof A\n): (keyof A | ((input: A) => SortCompareOut)) | keyof A => {\n  const i = def.find(x => x.name === sortAttribute);\n  if (!i || !i.sort) {\n    throw Error('sort attribute could not be matched');\n  }\n\n  if (typeof i.sort === 'object' && 'func' in i.sort) {\n    return i.sort.func;\n  }\n\n  return sortAttribute;\n};\n","export const compareString = (main: string, searchString: string): boolean =>\n  main.toLowerCase().indexOf(searchString.toLowerCase()) > -1;\n\n// interface Search {\n//   value: string;\n//   func: (d: any, searchValue: string) => boolean;\n// }\n\nexport type FilterSearchValue = string | number | boolean;\nexport const toFilterArray = <A>(\n  filters: { [k in keyof A]?: FilterSearchValue }\n): FilterUnit<A>[] =>\n  Object.entries(filters).map(([k, v]) => ({\n    name: k as keyof A,\n    value: v as FilterSearchValue\n  }));\n// above is generalization of\n// const filterArray:FilterUnit<Animal>[] = Object.entries(filters).map(([k, v]) => ({name: k as keyof Animal, value: v as FilterSearchValue}))\n\nexport const compare = (\n  main: any,\n  search: string | number | boolean //| Search,\n): boolean => {\n  const mainType = typeof main;\n  const searchType = typeof search;\n\n  if (searchType === 'string') {\n    // here casting the `main` so that it can match with the search even if not of the same type\n    switch (mainType) {\n      case 'string':\n        return compareString(main as string, search as string);\n      case 'number':\n        return main === Number(search);\n      default:\n        return false;\n    }\n  }\n\n  return false;\n};\n\n// this is a hack that will work for nested objects... leaving like this until better option\nexport const searchInObject = (searchString: string, object: any): boolean =>\n  JSON.stringify(object).toLowerCase().includes(searchString.toLowerCase());\n\n// same as above but only works with linear object, the rsult will be more precise though\nexport const searchInObjectLinear = (\n  searchString: string,\n  object: any\n): boolean =>\n  Object.keys(object)\n    .map(o => {\n      const main = object[o];\n\n      return compare(main, searchString);\n    })\n    .reduce((a, b) => a || b);\n\nexport type FilterFunc<A> = (d: A, searchValue: any[]) => boolean;\nexport type FilterUnit<A> = {\n  name: keyof A | 'globalSearch';\n  value: string | number | boolean | { value: any; func: FilterFunc<A> };\n};\n\n// todo here unfortunately `k` cant be typed as keyof A, typescript bug/limitation?\nexport const applyFilter = <A>(\n  data: A[],\n  filterArray: FilterUnit<A>[]\n): A[] => {\n  //filters: {[k : string]:any}): A[] => {\n  //const filterArray:{name: string, value: any}[] = Object.entries(filters).map(([name, value]:[string,any]) => ({name, value}))\n\n  if (filterArray.length === 0) {\n    return data;\n  }\n\n  //console.log(filterArray)\n\n  return data.filter((d: A) => {\n    return filterArray\n      .map(f => {\n        if (f.name === 'globalSearch' && typeof f.value === 'string') {\n          return searchInObject(f.value, d);\n        }\n\n        if (f.name !== 'globalSearch') {\n          const key: keyof A = f.name;\n\n          if (typeof f.value === 'object') {\n            if (typeof f.value.func === 'function' && f.value.value) {\n              if (Array.isArray(f.value.value) && f.value.value.length > 0) {\n                return f.value.func(d, f.value.value);\n              } else {\n                //console.log('h')\n                //console.log(f.value.value)\n                return f.value.func(d, f.value.value.value);\n              }\n            }\n            return true;\n          }\n\n          return compare(d[key], f.value);\n        }\n\n        return true;\n      })\n      .reduce((a, b) => a && b);\n  });\n};\n\nexport const addRemoveToArray = <T = any>(v: T, a: T[] = []): T[] => {\n  if (!a) {\n    return [v];\n  }\n\n  if (a.includes(v)) {\n    const idx = a.indexOf(v);\n    a.splice(idx, 1);\n\n    return a;\n  }\n\n  a.push(v);\n\n  return a;\n};\n\nexport const updateFilters = <A>(\n  filters: any,\n  v: {\n    name: keyof A | 'globalSearch' | 'id' | 'uuid';\n    value: any;\n    type?: string;\n  }\n): { [k in keyof A | 'globalSearch']?: any } => {\n  if (v.value === null || v.value === '') {\n    delete filters[v.name];\n  } else {\n    // if object\n    if (typeof v.value !== 'string') {\n      if (v.type === 'category') {\n        if (!filters[v.name]) {\n          filters[v.name] = { value: [], func: v.value.func };\n        }\n\n        filters[v.name].value = addRemoveToArray(\n          v.value.value,\n          filters[v.name].value\n        );\n\n        if (filters[v.name].value.length === 0) {\n          delete filters[v.name];\n        }\n      } else {\n        if (!filters[v.name]) {\n          filters[v.name] = { value: null, func: v.value.func };\n        }\n\n        filters[v.name].value = v.value;\n      }\n    } else {\n      // if string\n      filters[v.name] = v.value;\n    }\n  }\n\n  // setState({ ...state, filters, pageIdx });\n  return filters;\n};\n","import { ActionType, Action, State } from './type';\n\nfunction listSuperReducer<A>(state: State<A>, action: Action): State<A> {\n  if (action.type === ActionType.FETCH_DATA_REQUEST) {\n    return {\n      ...state,\n      loading: true\n    };\n  }\n\n  if (action.type === ActionType.FETCH_DATA_SUCCESS) {\n    const { data, numberOfTotalRows } = action.payload;\n    return {\n      ...state,\n      loading: false,\n      data,\n      numberOfTotalRows\n    };\n  }\n\n  if (action.type === ActionType.FILTER_CHANGE) {\n    const { filters, pageIdx } = action.payload;\n    return {\n      ...state,\n      filters,\n      pageIdx\n    };\n  }\n\n  if (action.type === ActionType.ORDER_CHANGE) {\n    const { sortDescAsc, sortAttribute, pageIdx } = action.payload;\n    return {\n      ...state,\n      sortDescAsc,\n      sortAttribute,\n      pageIdx\n    };\n  }\n\n  if (action.type === ActionType.PAGE_CHANGE) {\n    const { pageIdx } = action.payload;\n    return {\n      ...state,\n      pageIdx\n    };\n  }\n\n  return state;\n}\n\nexport default listSuperReducer;\n","import { State } from './type';\n\nconst getInitialState = <A>(data?: A[]): State<A> => ({\n  sortDescAsc: true,\n  filters: {},\n  pageIdx: 1,\n  data: data ? data : [],\n  numberOfTotalRows: data && data.length ? data.length : 0,\n  loading: false\n});\n\nexport default getInitialState;\n","import React, { useCallback, useEffect, useReducer, Reducer } from 'react';\n\nimport Utils from '@nexys/utils';\n\nimport {\n  GlobalSearch,\n  HeaderUnit,\n  OrderController,\n  Row,\n  ColCell,\n  RecordInfo,\n  NoRow,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody,\n  FilterUnit,\n  Loader\n} from './ui';\nimport { InnerProps as PaginationProps } from './pagination';\nimport {\n  Config,\n  Definition,\n  DefinitionItem,\n  AsyncDataConfig,\n  AsyncDataReturn\n} from '../types';\nimport { order, getSort } from './utils/order-utils';\nimport {\n  applyFilter,\n  toFilterArray,\n  updateFilters\n} from './utils/filter-utils';\nimport { withPagination } from './utils/pagination-utils';\nimport {\n  listSuperReducer,\n  getInitialState,\n  Action,\n  ActionType,\n  State,\n  FiltersType\n} from './list-super-partials';\n\nexport interface Props {\n  HeaderUnit: typeof HeaderUnit;\n  FilterUnit: typeof FilterUnit;\n  OrderController: typeof OrderController;\n  ColCell: typeof ColCell;\n  GlobalSearch: typeof GlobalSearch;\n  NoRow: typeof NoRow;\n  Row: typeof Row;\n  ListWrapper: typeof ListWrapper;\n  ListContainer: typeof ListContainer;\n  ListHeader: typeof ListHeader;\n  ListBody: typeof ListBody;\n  RecordInfo: typeof RecordInfo;\n  Pagination: (props: PaginationProps) => JSX.Element | null;\n}\n\nexport interface InnerProps<A> {\n  def: Definition<A>;\n  data?: A[];\n  nPerPage?: number;\n  config?: Config;\n  asyncData?: (config: AsyncDataConfig<A>) => Promise<AsyncDataReturn<A>>;\n}\n\nconst ListSuper = <A,>({\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  ColCell,\n  GlobalSearch,\n  NoRow,\n  Row,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody,\n  RecordInfo,\n  Pagination\n}: Props) =>\n  function InnerListSuper(props: InnerProps<A>): JSX.Element {\n    const [state, dispatch] = useReducer<Reducer<State<A>, Action>>(\n      listSuperReducer,\n      getInitialState<A>(props.data)\n    );\n    const { def, config = {}, asyncData } = props;\n    const {\n      filters,\n      pageIdx,\n      sortAttribute,\n      sortDescAsc,\n      data,\n      numberOfTotalRows,\n      loading\n    } = state;\n    const nPerPage = config.nPerPage || props.nPerPage || 25;\n    if (props.nPerPage) {\n      console.warn(\n        'The use of nPerPage in props is deprecated. Add nPerPage to the config object prop.'\n      );\n    }\n\n    const fetchData = useCallback(\n      (config?: {\n        pageIdx?: number;\n        filters?: FiltersType<A>;\n        sortAttribute?: keyof A;\n        sortDescAsc?: boolean;\n      }): void => {\n        if (asyncData) {\n          dispatch({ type: ActionType.FETCH_DATA_REQUEST });\n          asyncData({\n            nPerPage,\n            pageIdx: config && config.pageIdx ? config.pageIdx : pageIdx,\n            filters: config && config.filters ? config.filters : filters,\n            sort: {\n              attribute:\n                config && config.sortAttribute\n                  ? config.sortAttribute\n                  : sortAttribute,\n              descAsc:\n                config && typeof config.sortDescAsc !== 'undefined'\n                  ? config.sortDescAsc\n                  : sortDescAsc\n            }\n          }).then(res => {\n            dispatch({\n              type: ActionType.FETCH_DATA_SUCCESS,\n              payload: { data: res.data, numberOfTotalRows: res.meta.n }\n            });\n          });\n        }\n      },\n      [asyncData, filters, nPerPage, pageIdx, sortAttribute, sortDescAsc]\n    );\n\n    useEffect(() => {\n      fetchData();\n    }, [asyncData, fetchData]);\n\n    const handleFilterChange = (v: {\n      name: keyof A | 'globalSearch' | 'id' | 'uuid';\n      value: any;\n      type?: string;\n    }): void => {\n      const newFilters = updateFilters<A>(filters, v);\n\n      // when a filter is applied, the page index is reset\n      const pageIdx = 1;\n\n      const config = {\n        filters: newFilters,\n        pageIdx\n      };\n\n      dispatch({\n        type: ActionType.FILTER_CHANGE,\n        payload: config\n      });\n\n      fetchData(config);\n    };\n\n    /**\n     * defines order to apply\n     * @param  {[type]} name    attribute/column\n     * @param  {[type]} descAsc true/false - asc or desc. if null, will toggle\n     * @return {[type]}         [description]\n     * todo: allow custom ordering\n     */\n    const setOrder = (\n      name: keyof A | 'id' | 'uuid',\n      descAsc: boolean | null = null\n    ): void => {\n      if (descAsc === null) {\n        descAsc = !sortDescAsc;\n      }\n\n      const config = { sortDescAsc: descAsc, sortAttribute: name, pageIdx: 1 };\n\n      dispatch({\n        type: ActionType.ORDER_CHANGE,\n        payload: config\n      });\n    };\n\n    const changePage = (pageIdx: number): void => {\n      // todo block beyond max page\n      if (pageIdx > 0) {\n        const config = { pageIdx };\n\n        dispatch({ type: ActionType.PAGE_CHANGE, payload: config });\n      }\n    };\n\n    const isSort = (h: DefinitionItem<A>): boolean => {\n      return (\n        (typeof h.sort === 'boolean' && h.sort === true) ||\n        typeof h.sort === 'object'\n      );\n    };\n\n    const renderHeaders = (): JSX.Element[] => {\n      return def.map((h, i) => {\n        const label = h.label === null ? null : h.label || h.name;\n\n        const order = isSort(h) ? (\n          <OrderController\n            descAsc={sortAttribute === h.name ? sortDescAsc : null}\n            onClick={(): void => setOrder(h.name)}\n          />\n        ) : null;\n\n        const filter = (\n          <FilterUnit\n            key={i}\n            filters={filters}\n            name={h.name}\n            filter={h.filter}\n            onChange={handleFilterChange}\n          />\n        );\n\n        return (\n          <HeaderUnit key={i}>\n            {label} {order} {filter}\n          </HeaderUnit>\n        );\n      });\n    };\n\n    const renderBody = (data: A[]): JSX.Element => (\n      <>\n        {data.map((row, i: number) => (\n          <tr key={i}>\n            {def.map((h, j) => (\n              <ColCell key={j}>\n                {h.render\n                  ? h.render(row)\n                  : Utils.ds.get(h.name.toString(), row)}\n              </ColCell>\n            ))}\n          </tr>\n        ))}\n      </>\n    );\n\n    const renderLoader = (): JSX.Element => (\n      <tr>\n        <ColCell colSpan={def.length}>\n          <Loader />\n        </ColCell>\n      </tr>\n    );\n\n    let fData: A[] = [];\n    let fpData: A[] = [];\n    let n = 0;\n\n    if (!asyncData) {\n      fData = applyFilter(data, toFilterArray<A>(filters));\n      n = fData.length;\n\n      fpData = sortAttribute\n        ? withPagination(\n            order<A>(fData, getSort<A>(def, sortAttribute), sortDescAsc),\n            pageIdx,\n            nPerPage\n          )\n        : withPagination(fData, pageIdx, nPerPage);\n    } else {\n      n = numberOfTotalRows;\n    }\n\n    const showPagination: boolean =\n      typeof config.pagination !== 'undefined' ? config.pagination : true;\n\n    const showRecordInfo: boolean = config.recordInfo || true;\n\n    return (\n      <ListWrapper>\n        <GlobalSearch\n          config={config}\n          onChange={handleFilterChange}\n          filters={filters}\n        />\n        <ListContainer>\n          <ListHeader>\n            <Row>{renderHeaders()}</Row>\n          </ListHeader>\n\n          <ListBody>\n            {loading ? renderLoader() : renderBody(asyncData ? data : fpData)}\n          </ListBody>\n        </ListContainer>\n        {showRecordInfo && (\n          <RecordInfo n={n} idx={pageIdx} nPerPage={nPerPage} />\n        )}\n\n        {showPagination && n > nPerPage && (\n          <Pagination\n            n={n}\n            nPerPage={nPerPage}\n            idx={pageIdx}\n            onClick={changePage}\n          />\n        )}\n\n        {!loading && <NoRow n={n} />}\n      </ListWrapper>\n    );\n  };\n\nexport default ListSuper;\n","/**\n * Pagination from MUI\n * it is easy to create your own version, by using this file as an example\n * see\n * https://material-ui.com/api/pagination/#props\n * https://material-ui.com/api/pagination-item/#props\n * https://material-ui.com/components/pagination/#basic-pagination\n */\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PaginationMaterial from '@material-ui/lab/Pagination';\nimport { getPagination } from './utils/pagination-utils';\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  })\n);\n\nexport interface InnerProps {\n  idx: number;\n  n: number;\n  nPerPage: number;\n  onClick: (num: number) => void;\n}\n\nconst Pagination = (props: InnerProps): JSX.Element | null => {\n  const { n, nPerPage, idx, onClick } = props;\n  const classes = useStyles();\n\n  if (n === 0) {\n    return null;\n  }\n\n  const { nPage } = getPagination(n, nPerPage);\n\n  return (\n    <div className={classes.root}>\n      <PaginationMaterial\n        page={idx}\n        onChange={(_a: any, b: number): void => onClick(b)}\n        count={nPage}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import {\n  GlobalSearch,\n  HeaderUnit,\n  FilterUnit,\n  OrderController,\n  Row,\n  ColCell,\n  RecordInfo,\n  NoRow,\n  ListWrapper,\n  ListContainer,\n  ListHeader,\n  ListBody\n  //PaginationUnit,PaginationWrapper\n} from './ui';\n\nimport ListSuper, { InnerProps } from './list-super';\nimport PaginationMaterial from './pagination-material';\n\n// by default we use the pagination from Material UI\nconst Pagination = PaginationMaterial; // PaginationSuper({ PaginationUnit, PaginationWrapper });\n\nconst List = <A>(props: InnerProps<A>): JSX.Element =>\n  ListSuper<A>({\n    HeaderUnit,\n    FilterUnit,\n    OrderController,\n    ColCell,\n    GlobalSearch,\n    NoRow,\n    Row,\n    ListWrapper,\n    ListContainer,\n    ListHeader,\n    ListBody,\n    RecordInfo,\n    Pagination\n  })(props);\n\nexport default List;\n","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: (\n        <Tooltip title=\"Something about name\">\n          <span>Name</span>\n        </Tooltip>\n      ),\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Config, Definition } from '../lib/types';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config: Config = {\n    nPerPage: 7\n  };\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Pagination = (): JSX.Element => {\n  const [itemsPerPage, setItemsPerPage] = React.useState(10);\n\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currencies',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const handlePageNumber = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const value = Math.ceil(Number(e.target.value));\n    setItemsPerPage(value > 0 ? value : 1);\n  };\n\n  return (\n    <>\n      <h2>Pagination example</h2>\n      <Grid md={2} item={true}>\n        # of records per page\n        <input\n          width=\"20%\"\n          type=\"number\"\n          value={itemsPerPage}\n          onChange={handlePageNumber}\n        />\n      </Grid>\n\n      <List<Country>\n        data={(data as unknown) as Country[]}\n        def={columns}\n        config={{ nPerPage: itemsPerPage }}\n      />\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nimport { Config, Definition } from '../lib/types';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Main = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config: Config = {\n    pagination: false\n  };\n\n  return (\n    <>\n      <h2>Simple table example</h2>\n      <List data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Filters = (): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink,\n      filter: {\n        type: 'string',\n        func: (dataItem, filterValue): boolean => {\n          return dataItem.name.common\n            .toLowerCase()\n            .includes(filterValue.toLowerCase());\n        }\n      }\n    },\n    {\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || '',\n      sort: true\n    },\n    {\n      name: 'currencies',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      },\n      filter: {\n        type: 'category',\n        func: (dataItem, filterValues): boolean => {\n          const filtered = Object.keys(dataItem.currencies).filter(currency =>\n            filterValues.includes(currency)\n          );\n          return Boolean(filtered.length);\n        },\n        options: [\n          { key: 'EUR', value: 'Euro' },\n          { key: 'USD', value: 'US Dollar' }\n        ]\n      }\n    },\n    {\n      name: 'region',\n      title: 'Region',\n      filter: {\n        type: 'select',\n        func: (dataItem, filterValue): boolean => {\n          return dataItem.region === filterValue;\n        },\n        options: [\n          { key: 'Asia', value: 'Asia' },\n          { key: 'Europe', value: 'Europe' }\n        ]\n      }\n    },\n    {\n      name: 'cca2',\n      title: 'CCA2',\n      filter: true,\n      sort: true\n    }\n  ];\n\n  return (\n    <>\n      <h2>Filter example</h2>\n      <List<Country>\n        data={(data as unknown) as Country[]}\n        def={columns}\n        config={{ search: true, nPerPage: 20 }}\n      />\n    </>\n  );\n};\n\nexport default Filters;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst Sorting = <A,>(): JSX.Element => {\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns: Definition<Country> = [\n    {\n      name: 'name',\n      title: 'Name',\n      render: renderNameLink\n    },\n    {\n      key: 'capital',\n      name: 'capital',\n      title: 'Capital',\n      render: (x): string[] | string => x.capital || '',\n      sort: true\n    },\n    {\n      name: 'currencies',\n      title: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      },\n      sort: {\n        func: (x: Country): string => {\n          const s = Object.keys(x.currencies)[0] || '';\n\n          return s;\n        }\n      }\n    }\n  ];\n\n  const config = {};\n\n  return (\n    <>\n      <h2>Table with sorting capabilities example</h2>\n      <p>\n        The Capital column is sorted according to the value in the field whereas\n        currencies follows a custom sort{' '}\n        <small>See the source of this file for details</small>\n      </p>\n      <List<Country> data={data} def={columns} config={config} />\n    </>\n  );\n};\n\nexport default Sorting;\n","import React from 'react';\n\nimport Alert from '../lib/components/alert';\n\nconst MyAlert = (): JSX.Element => {\n  return <Alert type={'info'}>Some content</Alert>;\n};\n\nexport default MyAlert;\n","import React from 'react';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\ninterface Continent {\n  id: number;\n  name: string;\n}\n\ninterface Country {\n  name: string;\n}\n\ninterface Animal {\n  id: number;\n  check?: boolean;\n  name: string;\n  location: Continent;\n  country: Country;\n  amount: number;\n  int: number;\n  date: string;\n}\n\nconst af: Continent = { id: 1, name: 'Africa' };\nconst eu: Continent = { id: 2, name: 'Europe' };\nconst as: Continent = { id: 3, name: 'Asia' };\nconst am: Continent = { id: 4, name: 'America' };\n\nconst data: Animal[] = [\n  {\n    id: 2,\n    check: true,\n    name: 'Sheep',\n    location: eu,\n    country: { name: 'United Kingdom' },\n    amount: 23.3,\n    int: 23,\n    date: '2019-09-05'\n  },\n  {\n    id: 3,\n    name: 'Tiger',\n    location: as,\n    country: { name: 'India' },\n    amount: 24.1,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 4,\n    name: 'Elephant',\n    location: af,\n    country: { name: 'Tanzania' },\n    amount: 23,\n    int: 3,\n    date: '2019-09-05'\n  },\n  {\n    id: 5,\n    name: 'Lion',\n    location: af,\n    country: { name: 'South Africa' },\n    amount: 0.3,\n    int: 2,\n    date: '2019-09-05'\n  },\n  {\n    id: 6,\n    name: 'Cat',\n    location: eu,\n    country: { name: 'Germany' },\n    amount: 2.31,\n    int: 7,\n    date: '2019-09-05'\n  },\n  {\n    id: 7,\n    name: 'Grizzly',\n    location: am,\n    country: { name: 'Canada' },\n    amount: 3.35,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 8,\n    name: 'Antelope',\n    location: af,\n    country: { name: 'Namibia' },\n    amount: 2.3,\n    int: 87,\n    date: '2019-09-05'\n  }\n];\n\nconst options = [af, eu, as, am].map(v => ({ key: v.id, value: v.name }));\n\nconst def: Definition<Animal> = [\n  { name: 'name', filter: true, sort: true },\n  {\n    name: 'location',\n    filter: {\n      type: 'category',\n      func: (a, b): boolean => b.includes(a.location.id),\n      options\n    },\n    render: (x): string => x.location.name\n  },\n  {\n    name: 'country',\n    label: 'Country',\n    filter: {\n      type: 'string',\n      func: (a, b): boolean =>\n        a.country.name\n          .toLocaleLowerCase()\n          .includes(((b as unknown) as string).toLocaleLowerCase())\n    },\n    render: (x): string => x.country.name\n  },\n  { name: 'amount', label: 'A long label', filter: true },\n  { name: 'int', label: 'd', filter: true },\n  { name: 'date', label: 'a date', filter: true },\n  {\n    name: 'location',\n    label: 'custom',\n    render: (x): string => 'custom ' + x.location.name\n  }\n];\n\nconst Small = (): JSX.Element => (\n  <List data={data} def={def} config={{ search: true, nPerPage: 3 }} />\n);\n\nexport default Small;\n","import React from 'react';\n\nimport { Definition, AsyncDataConfig, AsyncDataReturn } from '../lib/types';\nimport List from '../lib/list';\nimport { withPagination } from '../lib/list/utils/pagination-utils';\nimport { applyFilter, toFilterArray } from '../lib/list/utils/filter-utils';\nimport { order } from '../lib/list/utils/order-utils';\n\ninterface Continent {\n  id: number;\n  name: string;\n}\n\ninterface Country {\n  name: string;\n}\n\ninterface Animal {\n  id: number;\n  check?: boolean;\n  name: string;\n  location: Continent;\n  country: Country;\n  amount: number;\n  int: number;\n  date: string;\n}\n\ntype Animals = Animal[];\n\nconst af: Continent = { id: 1, name: 'Africa' };\nconst eu: Continent = { id: 2, name: 'Europe' };\nconst as: Continent = { id: 3, name: 'Asia' };\nconst am: Continent = { id: 4, name: 'America' };\n\nconst data: Animals = [\n  {\n    id: 2,\n    check: true,\n    name: 'Sheep',\n    location: eu,\n    country: { name: 'United Kingdom' },\n    amount: 23.3,\n    int: 23,\n    date: '2019-09-05'\n  },\n  {\n    id: 3,\n    name: 'Tiger',\n    location: as,\n    country: { name: 'India' },\n    amount: 24.1,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 4,\n    name: 'Elephant',\n    location: af,\n    country: { name: 'Tanzania' },\n    amount: 23,\n    int: 3,\n    date: '2019-09-05'\n  },\n  {\n    id: 5,\n    name: 'Lion',\n    location: af,\n    country: { name: 'South Africa' },\n    amount: 0.3,\n    int: 2,\n    date: '2019-09-05'\n  },\n  {\n    id: 6,\n    name: 'Cat',\n    location: eu,\n    country: { name: 'Germany' },\n    amount: 2.31,\n    int: 7,\n    date: '2019-09-05'\n  },\n  {\n    id: 7,\n    name: 'Grizzly',\n    location: am,\n    country: { name: 'Canada' },\n    amount: 3.35,\n    int: 43,\n    date: '2019-09-05'\n  },\n  {\n    id: 8,\n    name: 'Antelope',\n    location: af,\n    country: { name: 'Namibia' },\n    amount: 2.3,\n    int: 87,\n    date: '2019-09-05'\n  }\n];\n\nconst def: Definition<Animal> = [\n  { name: 'name', filter: true, sort: true },\n  {\n    name: 'location',\n    render: (x): string => x.location.name,\n    filter: {\n      type: 'category',\n      func: (a, b): boolean => b.includes(a.location.id),\n      options: [\n        { key: 1, value: 'Africa' },\n        { key: 2, value: 'Europe' }\n      ]\n    }\n  },\n  {\n    name: 'country',\n    label: 'Country',\n    render: (x): string => x.country.name /* filter: true */\n  },\n  { name: 'amount', label: 'A long label', filter: true },\n  { name: 'int', label: 'd', filter: true },\n  { name: 'date', label: 'a date', filter: true },\n  {\n    name: 'name',\n    label: 'custom',\n    render: (x): string => 'custom' + x.location.name\n  }\n];\n\nconst asyncData = (\n  config: AsyncDataConfig<Animal>\n): Promise<AsyncDataReturn<Animal>> => {\n  const { nPerPage, pageIdx, filters, sort } = config;\n  const filteredData = applyFilter(data, toFilterArray<Animal>(filters));\n  const orderedData = order(\n    filteredData,\n    sort.attribute ? sort.attribute : undefined,\n    sort.descAsc\n  );\n  return new Promise(r => {\n    setTimeout(() => {\n      r({\n        meta: {\n          n: orderedData.length\n        },\n        data: withPagination(orderedData, pageIdx, nPerPage)\n      });\n    }, 1000);\n  });\n};\n\nconst AsyncExample = (): JSX.Element => (\n  <List<Animal>\n    def={def}\n    config={{ search: true, nPerPage: 3 }}\n    asyncData={asyncData}\n  />\n);\n\nexport default AsyncExample;\n","import Main from './main';\nimport NPerPage from './nperpage';\nimport Pagination from './pagination';\nimport NoPagination from './no-pagination';\nimport Filters from './filters';\nimport Sorting from './sorting';\nimport Alert from './alert';\nimport Small from './small';\nimport Async from './async';\nimport Checkbox from './checkbox';\n\nexport const list = [\n  { label: 'Main', path: '/table', Component: Main },\n  { label: 'N Per Page in Config', path: '/nperpage', Component: NPerPage },\n  { label: 'Pagination', path: '/pagination', Component: Pagination },\n  { label: 'No Pagination', path: '/no-pagination', Component: NoPagination },\n  { label: 'Filtering', path: '/filters', Component: Filters },\n  { label: 'Sorting', path: '/sorting', Component: Sorting },\n  { label: 'Checks', path: '/checks', Component: Checkbox },\n  { label: 'Small', path: '/small', Component: Small },\n  { label: 'Async', path: '/async', Component: Async },\n  { label: 'Alert', path: '/alert', Component: Alert }\n];\n","import React from 'react';\nimport { Checkbox } from '@material-ui/core';\n\nimport { Definition } from '../lib/types/definition';\nimport List from '../lib/list';\n\n// data taken from\nimport data, { CountryName, OfficialAndCommon } from 'world-countries';\n\ninterface Currency {\n  [key: string]: {\n    name: string;\n    symbol: string;\n  };\n}\n\n/* \n  redefining Country interface as \n  the Country interface from 'world-countries'\n  does NOT reflect the actual data\n  i.e. currency vs currencies\n*/\ninterface Country {\n  name: CountryName;\n  tld: string[];\n  cca2: string;\n  ccn3: string;\n  cca3: string;\n  cioc: string;\n  independent: boolean;\n  status: string;\n  currencies: Currency;\n  callingCode: string[];\n  capital: string[];\n  altSpellings: string[];\n  region: string;\n  subregion: string;\n  languages: { [languageCode: string]: string };\n  translations: { [languageCode: string]: OfficialAndCommon };\n  latlng: [number, number];\n  demonym: string;\n  landlocked: boolean;\n  borders: string[];\n  area: number;\n  flag: string;\n}\n\nconst CheckboxExample = (): JSX.Element => {\n  const [selected, setSelected] = React.useState<string[]>([]);\n\n  const onCheckClick = (id: string): void => {\n    const idx = selected.indexOf(id);\n\n    if (idx < 0) {\n      setSelected([...selected, id]);\n    } else {\n      setSelected(selected.filter((_, i) => i !== idx));\n    }\n  };\n\n  const renderCheckbox = (\n    x: Country,\n    onCheckClick: (id: string) => void\n  ): JSX.Element => (\n    <Checkbox onClick={(): void => onCheckClick(x.name.common)} />\n  );\n\n  const renderNameLink = (x: Country): JSX.Element => (\n    <a\n      href={`https://en.wikipedia.org/wiki/${encodeURIComponent(\n        x.name.common\n      )}`}\n    >\n      {x.name.common}\n    </a>\n  );\n\n  const columns = (onCheckClick: (id: string) => void): Definition<Country> => [\n    {\n      name: 'id',\n      render: (x): JSX.Element => renderCheckbox(x, onCheckClick)\n    },\n    {\n      name: 'name',\n      label: 'Name',\n      render: renderNameLink\n    },\n    {\n      name: 'capital',\n      label: 'Capital',\n      render: (x): string[] | string => x.capital || ''\n    },\n    {\n      name: 'currency',\n      label: 'Currency',\n      render: (x): string => {\n        const keys = Object.keys(x.currencies);\n\n        if (!keys || keys.length === 0) {\n          return '-';\n        }\n\n        const k = keys[0];\n        return `${x.currencies[k].name} (${k})`;\n      }\n    }\n  ];\n\n  const config = {};\n\n  return (\n    <>\n      {JSON.stringify(selected)}\n      <h2>Simple table example</h2>\n      <List data={data} def={columns(onCheckClick)} config={config} />\n    </>\n  );\n};\n\nexport default CheckboxExample;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { list } from '../list';\n\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Drawer,\n  IconButton\n} from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ChevronLeft as ChevronLeftIcon } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  }\n}));\n\ninterface ListUnitProps {\n  label: string;\n  path: string;\n}\n\nconst ListUnit = (props: ListUnitProps): JSX.Element => {\n  const { label, path } = props;\n  return (\n    <Link to={path}>\n      <ListItem button>\n        <ListItemText primary={label} />\n      </ListItem>\n    </Link>\n  );\n};\n\nconst mainListItems = list.map((l, i) => (\n  <ListUnit key={i} path={l.path} label={l.label} />\n));\n\ninterface LeftNavProps {\n  onClose: () => void;\n  open: boolean;\n}\n\nconst LeftNav = (props: LeftNavProps): JSX.Element => {\n  const { onClose, open } = props;\n  const classes = useStyles();\n\n  const handleDrawerClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      }}\n      open={open}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListUnit label={'Home'} path={'/'} />\n        {mainListItems}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default LeftNav;\n","import React from 'react';\n\nimport {\n  CssBaseline,\n  AppBar,\n  Container,\n  Toolbar,\n  IconButton,\n  Typography,\n  Grid,\n  Paper\n} from '@material-ui/core';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//import Link as LinkMUI from '@material-ui/core/Link';\nimport { Menu as MenuIcon } from '@material-ui/icons';\n\nimport Footer from './footer';\nimport LeftNav from './left';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n}\n\nconst Index = ({ children }: Props): JSX.Element => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = (): void => {\n    setOpen(true);\n  };\n\n  const handleClose = (): void => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            MUI-List\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <LeftNav open={open} onClose={handleClose} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>{children}</Paper>\n            </Grid>\n          </Grid>\n          <Footer />\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from 'react';\n\nimport { Router, Switch, Route } from 'react-router-dom';\nimport * as History from 'history';\n\nimport Public from './public';\nimport Layout from './layout';\nimport { list } from './list';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst Routes = (): JSX.Element => (\n  <Router history={history}>\n    <Layout>\n      <Switch>\n        {list.map((l, i) => (\n          <Route\n            key={i}\n            exact\n            path={l.path}\n            component={(): JSX.Element => <l.Component />}\n          />\n        ))}\n        <Route component={(): JSX.Element => <Public />} />\n      </Switch>\n    </Layout>\n  </Router>\n);\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}